{"version":3,"sources":["redux/actions/Users.js","redux/actions/WithdrawRequestActions.js","components/shared-components/Flex/index.js","redux/actions/DoctorCategory.js","redux/actions/TransactionActions.js","redux/actions/DashboardActions.js","redux/constants/Doctor.js","configs/AppConfig.js","redux/constants/SettingsConstants.js","redux/constants/Auth.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/Users.js","redux/reducers/DoctorCategory.js","redux/reducers/Doctor.js","redux/reducers/WithdrawRequestReducer.js","redux/reducers/TransactionReducer.js","redux/reducers/DashboardReducer.js","redux/reducers/SettingsReducer.js","redux/reducers/index.js","redux/sagas/Auth.js","redux/sagas/Users.js","redux/sagas/DoctorCategory.js","redux/sagas/Doctors.js","redux/sagas/WithdrawRequestSaga.js","redux/sagas/TransactionSaga.js","redux/sagas/DashboardSaga.js","redux/sagas/SettingsSaga.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/NavProfile.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","constants/ThemeConstant.js","redux/actions/Auth.js","redux/constants/Users.js","redux/constants/WithdrawRequestConstants.js","redux/actions/Doctor.js","redux/constants/DoctorCategory.js","redux/constants/TransactionConstants.js","redux/constants/DashboardConstants.js","redux/actions/SettingsActions.js"],"names":["fetchUsersInit","userId","type","USERS_FETCH_DATA_INIT","fetchUsersSuccess","data","USERS_FETCH_DATA_SUCCESS","fetchUsersFail","error","USERS_FETCH_DATA_FAIL","deleteUserInit","DELETE_USER_INIT","deleteUserSuccess","DELETE_USER_SUCCESS","deleteUserError","DELETE_USER_ERROR","getWithdrawRequestInit","GET_WITHDRAW_REQUEST_INIT","getWithdrawRequestSuccess","GET_WITHDRAW_REQUEST_SUCCESS","getWithdrawRequestError","GET_WITHDRAW_REQUEST_ERROR","setWihthdrawalRequestCompleteInit","SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT","setWihthdrawalRequestCompleteSuccess","SET_WIHTHDRAWAL_REQUEST_COMPLETE_SUCCESS","setWihthdrawalRequestCompleteError","SET_WIHTHDRAWAL_REQUEST_COMPLETE_ERROR","Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","fetchDoctorCategoryInit","DOCTOR_CATEGORY_FETCH_INIT","fetchDoctorCategorySuccess","DOCTOR_CATEGORY_FETCH_SUCCESS","fetchDoctorCategoryFail","DOCTOR_CATEGORY_FETCH_FAIL","getTransactionInit","GET_TRANSACTION_INIT","getTransactionSuccess","GET_TRANSACTION_SUCCESS","getTransactionError","GET_TRANSACTION_ERROR","getUserCountInit","GET_USER_COUNT_INIT","getUserCountSuccess","GET_USER_COUNT_SUCCESS","getUserCountError","GET_USER_COUNT_ERROR","DOCTOR_FETCH_INIT","DOCTOR_FETCH_SUCCESS","DOCTOR_FETCH_FAIL","FETCH_TOP_RATED_DOCTOR_INIT","FETCH_TOP_RATED_DOCTOR_SUCCESS","FETCH_TOP_RATED_DOCTOR_FAIL","SET_DOCTOR_ACCOUNT_STATUS_INIT","SET_DOCTOR_ACCOUNT_STATUS_SUCCESS","SET_DOCTOR_ACCOUNT_STATUS_ERROR","DELETE_DOCTOR_INIT","DELETE_DOCTOR_SUCCESS","DELETE_DOCTOR_ERROR","ADD_TOP_RATED_DOCTOR_INIT","ADD_TOP_RATED_DOCTOR_SUCCESS","ADD_TOP_RATED_DOCTOR_ERROR","DELETE_TOP_RATED_INIT","DELETE_TOP_RATED_SUCCESS","DELETE_TOP_RATED_ERROR","APP_NAME","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","direction","DIR_LTR","SET_WITHDRAWAL_PERCENTAGE_INIT","SET_WITHDRAWAL_PERCENTAGE_SUCCESS","SET_WITHDRAWAL_PERCENTAGE_ERROR","DELETE_IMAGE_CAROUSEL_INIT","DELETE_IMAGE_CAROUSEL_SUCCESS","DELETE_IMAGE_CAROUSEL_ERROR","GET_IMAGE_CAROUSEL_INIT","GET_IMAGE_CAROUSEL_SUCCESS","GET_IMAGE_CAROUSEL_ERROR","SAVE_IMAGE_CAROUSEL_INIT","SAVE_IMAGE_CAROUSEL_SUCCESS","SAVE_IMAGE_CAROUSEL_ERROR","GET_WITHDRAWAL_SETTINGS_INIT","GET_WITHDRAWAL_SETTINGS_SUCCESS","GET_WITHDRAWAL_SETTINGS_ERROR","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","initTheme","theme","initialState","success","delete","users","filter","elem","id","doctorCategory","topRatedDoctor","topRatedLoading","topRatedSuccess","topRatedDelete","topRatedError","doctors","doctorId","doctorAdded","find","object","console","log","objIndex","findIndex","obj","newArray","accountStatus","status","withdrawRequest","transaction","dashboard","successGet","imageCarouselData","getImageCarouselLoading","getImageCarouselError","getImageCarouselSuccess","saveImageCarouselLoading","saveImageCarouselError","saveImageCarouselSuccess","deleteImageCarouselSuccess","deleteImageCarouselError","settings","saveImageData","JSON","stringify","imageId","reducers","combineReducers","Theme","Auth","Users","DoctorCategory","doctor","Doctor","WithdrawRequest","Transaction","Dashboard","Settings","signInWithFBEmail","signOut","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","email","password","call","FirebaseService","signInEmailRequest","user","put","showAuthMessage","setItem","uid","authenticated","signOutRequest","undefined","signOutUser","removeItem","signOutSuccess","signUpEmailRequest","signUpSuccess","signInGoogleRequest","signInWithGoogleAuthenticated","signInFacebookRequest","signInWithFacebookAuthenticated","all","fork","getUsers","deleteUser","fetchCollection","sort","attribute","order","changeTime","map","element","d","Date","setUTCMilliseconds","createdAt","getDoctorCategory","getDoctors","getTopRatedDoctor","deleteTopRated","addTopRatedDoctor","deleteDoctor","setDoctorAccountStatus","setUTCSeconds","seconds","fetchDoctorSuccess","fetchDoctorFail","listIdTopRatedDoctor","convertTopRatedId","item","replace","length","queries","operator","value","listTopRated","fetchTopRatedDoctorSuccess","removeTopRatedDoctor","deleteTopRatedSuccess","deleteTopRatedError","addTopRatedDoctorSuccess","addTopRatedDoctorError","deleteDoctorAccount","deleteDoctorSuccess","setDoctorAccountStatusSuccess","setDoctorAccountStatusError","GetWithdrawRequest","setWihthdrawalRequestComplete","markWithdrawalRequestComplete","GetTransaction","GetUserCount","countCollection","SetWithdrawalPercentage","getWithdrawalSettings","saveImageCarousel","getImageCarousel","deleteImageCarousel","setPercentage","setWithdrawalPercentageSuccess","setWithdrawalPercentageError","getWithdrawalSettingsSuccess","getWithdrawalSettingsError","uploadImage","fileName","file","urlImage","imageUrl","saveImageCarouselData","removeImageCarousel","getState","Doctors","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","Icon","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","usersNavTree","UserOutlined","DoctorsNavTree","DoctorCategoryNavTree","WithdrawNavTree","DollarCircleOutlined","TransactionNavTree","SwapOutlined","SettingsNavTree","SettingOutlined","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","GG","BB","rgba","trim","str","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","input","searchText","screens","breakpoints","push","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","autoHide","getColorContrast","NAV_TYPE_TOP","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","SIDE_NAV_COLLAPSED_WIDTH","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","useState","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","menuItem","QuestionCircleOutlined","profileImg","profileMenu","size","el","href","e","LogoutOutlined","overlay","trigger","Header","toggleCollapsedNav","searchActive","setSearchActive","onSearchClose","navMode","useEffect","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","getLayoutGutter","useThemeSwitcher","paddingLeft","DIR_RTL","paddingRight","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","RouteInterceptor","isAuthenticated","rest","render","currentAppLocale","Array","exact","themes","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","db","firestore","storageRef","storage","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","functions","signInWithEmailAndPassword","catch","err","signInWithPopup","createUserWithEmailAndPassword","getFirestoreRef","collection","fetchDocument","doc","get","exists","baseQuery","FieldPath","documentId","where","orderBy","child","getDownloadURL","addDoctorCategory","categoryName","categoryTranslation","iconUrl","removeDoctorCategory","categoryId","editDoctorCategory","update","set","topRatedId","snapshot","docs","at","addMessage","httpsCallable","documentName","snap","percentage","tax","refFromURL","Timestamp","fromDate","record","transactionSnapshot","empty","signIn","signUp","signInWithGoogle","hideAuthMessage","showLoading","fetchDoctorInit","fetchTopRatedDoctorInit","deleteTopRatedInit","addTopRatedDoctorInit","deleteDoctorInit","setDoctorAccountStatusInit","setWithdrawalPercentageInit","getWithdrawalSettingsInit","saveImageCarouselInit","getImageCarouselInit","deleteImageCarouselInit"],"mappings":"gIAAA,wNAkBaA,EAAiB,WAAkB,IAAjBC,EAAgB,uDAAP,GACtC,MAAO,CAAEC,KAAMC,IAAuBF,WAG3BG,EAAoB,SAACC,GAChC,MAAO,CAAEH,KAAMI,IAA0BD,SAG9BE,EAAiB,SAACC,GAC7B,MAAO,CAAEN,KAAMO,IAAuBD,UAG3BE,EAAiB,SAACT,GAAD,MAAa,CACzCC,KAAMS,IACNV,OAAQA,IAGGW,EAAoB,SAACX,GAAD,MAAa,CAC5CC,KAAMW,IACNZ,WAGWa,EAAkB,SAACN,GAAD,MAAY,CACzCN,KAAMa,IACNP,W,iCC1CF,wNASaQ,EAAyB,iBAAO,CAC3Cd,KAAMe,MAGKC,EAA4B,SAACb,GAAD,MAAW,CAClDH,KAAMiB,IACNd,SAGWe,EAA0B,SAACZ,GAAD,MAAY,CACjDN,KAAMmB,IACNb,UAGWc,EAAoC,SAACjB,GAAD,MAAW,CAC1DH,KAAMqB,IACNlB,SAGWmB,EAAuC,SAACnB,GAAD,MAAW,CAC7DH,KAAMuB,IACNpB,SAGWqB,EAAqC,SAAClB,GAAD,MAAY,CAC5DN,KAAMyB,IACNnB,W,iCCnCF,gBAGMoB,EAAO,SAAAC,GACZ,IAAQC,EAA+ED,EAA/EC,SAAUC,EAAqEF,EAArEE,UAAWC,EAA0DH,EAA1DG,WAAYC,EAA8CJ,EAA9CI,eAAgBC,EAA8BL,EAA9BK,WAAYC,EAAkBN,EAAlBM,cAErE,OACC,qBAAKJ,UAAS,UAFiBG,EAAa,SAAW,YAEzC,YAA4BH,EAA5B,YAAyCI,EAAe,QAAUA,EAAgB,GAAlF,YAAwFH,EAAY,eAAiBA,EAAY,GAAjI,YAAuIC,EAAgB,mBAAqBA,EAAgB,IAA1M,SACEH,KAaJF,EAAKQ,aAAe,CACnBF,YAAY,EACZC,cAAe,MACfJ,UAAW,IAIGH,O,iCC5Bf,kHAKaS,EAA0B,WAAkB,IAAjBpC,EAAgB,uDAAP,GAC/C,MAAO,CAAEC,KAAMoC,IAA4BrC,WAEhCsC,EAA6B,SAAClC,GAAD,MAAW,CACnDH,KAAMsC,IACNnC,SAEWoC,EAA0B,SAACjC,GAAD,MAAY,CACjDN,KAAMwC,IACNlC,W,iCCdF,kHAMamC,EAAqB,iBAAO,CACrCzC,KAAM0C,MAGGC,EAAwB,SAACxC,GAAD,MAAW,CAC5CH,KAAM4C,IACNzC,SAGS0C,EAAsB,SAACvC,GAAD,MAAY,CAC3CN,KAAM8C,IACNxC,W,iCCjBJ,kHAMayC,EAAmB,iBAAO,CACnC/C,KAAMgD,MAGGC,EAAsB,SAAC9C,GAAD,MAAW,CAC1CH,KAAMkD,IACN/C,SAGSgD,EAAoB,SAAC7C,GAAD,MAAY,CACzCN,KAAMoD,IACN9C,W,gCCjBJ,omBAAO,IAAM+C,EAAoB,oBACpBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAA8B,8BAC9BC,EAAiC,iCACjCC,EAA8B,8BAE9BC,EAAiC,iCACjCC,EAAoC,oCACpCC,EAAkC,kCAClCC,EAAqB,qBACrBC,EAAwB,wBACxBC,EAAsB,sBACtBC,EAA4B,4BAC5BC,EAA+B,+BAC/BC,EAA6B,6BAC7BC,EAAwB,wBACxBC,EAA2B,2BAC3BC,EAAyB,0B,6/JCXzBC,EAAW,yBAEXC,EAAkB,OAClBC,EAAmB,QAEnBC,EAAe,CAC1BC,cAAc,EACdC,aAAcC,IACdC,OAAQ,KACRC,QAASC,IACTC,YAAa,UACbC,eAAgB,GAChBC,WAAW,EACXC,aAAc,QACdC,UAAWC,M,m+jBCrBb,8fAAO,IAAMC,EAAiC,iCACjCC,EAAoC,oCACpCC,EAAkC,kCAElCC,EAA6B,6BAC7BC,EAAgC,gCAChCC,EAA8B,8BAC9BC,EAA0B,0BAC1BC,EAA6B,6BAC7BC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAA8B,8BAC9BC,EAA4B,4BAC5BC,EAA+B,+BAC/BC,EAAkC,kCAClCC,EAAgC,iC,gCCf7C,4dAAO,IAAMC,EAAS,SACTC,EAAgB,gBAChBC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAe,eACfC,EAAa,aACbC,EAAqB,qBACrBC,EACX,mCACWC,EAAuB,uBACvBC,EACX,sC,kICHIC,EAAY,CAChBC,SAAS,EACTC,QAAS,GACTC,aAAa,EACbC,SAAU,GACVC,MAAOC,aAAaC,QAAQZ,MAkEfa,EA/DF,WAAgC,IAA/BC,EAA8B,uDAAtBT,EAAWU,EAAW,uCAC3C,OAAQA,EAAO9H,MACZ,KAAKuG,IACH,OAAO,2BACFsB,GADL,IAEER,SAAS,EACTG,SAAU,IACVC,MAAOK,EAAOL,QAElB,KAAKb,IACH,OAAO,2BACFiB,GADL,IAEEP,QAASQ,EAAOR,QAChBC,aAAa,EACbF,SAAS,IAEb,KAAKR,IACH,OAAO,2BACFgB,GADL,IAEEP,QAAS,GACTC,aAAa,IAEjB,KAAKd,IACH,OAAO,2BACFoB,GADL,IAEEJ,MAAO,KACPD,SAAU,IACVH,SAAS,IAGb,KAAKV,IACH,OAAO,2BACFkB,GADL,IAEER,SAAS,EACTI,MAAOK,EAAOL,QAGlB,KAAKX,IACH,OAAO,2BACFe,GADL,IAEER,SAAS,IAGb,KAAKJ,IAOL,KAAKE,IACH,OAAO,2BACFU,GADL,IAEER,SAAS,EACTI,MAAOK,EAAOL,QAIlB,QACE,OAAOI,IC/EAE,EAAuB,uBACvBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAe,eACfC,EAAmB,mB,QCK1BC,EAAS,eACV9D,KAuDU+D,EApDD,WAAgC,IAA/BZ,EAA8B,uDAAtBW,EAAWV,EAAW,uCAC3C,OAAQA,EAAO9H,MACb,KAAK+H,EACH,OAAO,2BACFF,GADL,IAEElD,aAAcmD,EAAOnD,eAEzB,KAAKsD,EACH,OAAO,2BACFJ,GADL,IAEEjD,aAAckD,EAAOlD,eAEzB,KAAKoD,EACH,OAAO,2BACFH,GADL,IAEE/C,OAAQgD,EAAOhD,SAEnB,KAAKoD,EACH,OAAO,2BACFL,GADL,IAEE9C,QAAS+C,EAAO/C,UAEpB,KAAKoD,EACH,OAAO,2BACFN,GADL,IAEE5C,YAAa6C,EAAO7C,cAExB,KAAKmD,EACH,OAAO,2BACFP,GADL,IAEE3C,eAAgB4C,EAAO5C,iBAE3B,KAAKmD,EACH,OAAO,2BACFR,GADL,IAEE1C,UAAW2C,EAAO3C,YAEtB,KAAKmD,EACH,OAAO,2BACFT,GADL,IAEEzC,aAAc0C,EAAO1C,eAEzB,KAAKmD,EACH,OAAO,2BACFV,GADL,IAEExC,UAAWyC,EAAOzC,YAEtB,QACE,OAAOwC,I,QCvDPa,EAAe,CACnBvI,KAAM,GACNkH,SAAS,EACT/G,MAAO,KACPqI,SAAS,EACTC,QAAQ,GAsCKC,EAnCD,WAAmC,IAAlChB,EAAiC,uDAAzBa,EAAcZ,EAAW,uCAC9C,OAAQA,EAAO9H,MACb,KAAKC,IACH,OAAO,2BACF4H,GADL,IAEER,SAAS,IAEb,KAAKjH,IACH,OAAO,2BACFyH,GADL,IAEE1H,KAAM2H,EAAO3H,KACbkH,SAAS,IAEb,KAAK9G,IACH,OAAO,2BACFsH,GADL,IAEER,SAAS,EACT/G,MAAOwH,EAAOxH,QAElB,KAAKG,IACH,OAAO,2BAAKoH,GAAZ,IAAmBR,SAAS,IAC9B,KAAK1G,IACH,OAAO,2BACFkH,GADL,IAEEc,SAAS,EACTxI,KAAM0H,EAAM1H,KAAK2I,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOlB,EAAO/H,UACrDsH,SAAS,IAEb,KAAKxG,IACH,OAAO,2BAAKgH,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IAEnD,QACE,OAAOQ,I,QC5CPa,EAAe,CACnBvI,KAAM,GACNkH,SAAS,EACT/G,MAAO,KACPqI,SAAS,EACTC,QAAQ,GAiBKK,EAdQ,WAAmC,IAAlCpB,EAAiC,uDAAzBa,EAAcZ,EAAW,uCACvD,OAAQA,EAAO9H,MACb,KAAKoC,IACH,OAAO,2BAAKyF,GAAZ,IAAmBR,SAAS,IAC9B,KAAK/E,IACH,OAAO,2BAAKuF,GAAZ,IAAmBc,SAAS,EAAMxI,KAAM2H,EAAO3H,KAAMkH,SAAS,IAChE,KAAK7E,IACH,OAAO,2BAAKqF,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IAEnD,QACE,OAAOQ,I,iBCHPa,EAAe,CACnBvI,KAAM,GACN+I,eAAgB,GAChB7B,SAAS,EACT8B,iBAAiB,EACjB7I,MAAO,KACPqI,SAAS,EACTC,QAAQ,EACRQ,iBAAiB,EACjBC,gBAAgB,EAChBC,eAAe,GA4FFC,EAzFC,WAAmC,IAAlC1B,EAAiC,uDAAzBa,EAAcZ,EAAW,uCAChD,OAAQA,EAAO9H,MACb,KAAKqD,IACH,OAAO,2BAAKwE,GAAZ,IAAmBR,SAAS,IAC9B,KAAK/D,IACH,OAAO,2BAAKuE,GAAZ,IAAmBc,SAAS,EAAMxI,KAAM2H,EAAO3H,KAAMkH,SAAS,IAChE,KAAK9D,IACH,OAAO,2BAAKsE,GAAZ,IAAmBvH,MAAOwH,EAAOxH,QACnC,KAAKkD,IACH,OAAO,2BAAKqE,GAAZ,IAAmBsB,iBAAiB,IACtC,KAAK1F,IACH,OAAO,2BACFoE,GADL,IAEEuB,iBAAiB,EACjBF,eAAgBpB,EAAOoB,eACvBC,iBAAiB,IAErB,KAAKzF,IACH,OAAO,2BACFmE,GADL,IAEEyB,cAAexB,EAAOwB,cACtBH,iBAAiB,IAErB,KAAK/E,IACH,OAAO,2BAAKyD,GAAZ,IAAmBsB,iBAAiB,IACtC,KAAK9E,IACH,OAAO,2BACFwD,GADL,IAEEc,SAAS,EACTO,eAAgBrB,EAAMqB,eAAeJ,QACnC,SAACC,GAAD,OAAUA,EAAKC,KAAOlB,EAAO0B,YAE/BL,iBAAiB,IAErB,KAAK7E,IACH,OAAO,2BAAKuD,GAAZ,IAAmByB,cAAexB,EAAOxH,QAC3C,KAAK2D,IACH,OAAO,2BAAK4D,GAAZ,IAAmBR,SAAS,IAC9B,KAAKnD,IACH,IAAIuF,EAAc5B,EAAM1H,KAAKuJ,MAC3B,SAACC,GAAD,OAAYA,EAAOX,KAAOlB,EAAO0B,YAMnC,OAJAI,QAAQC,IACN,mEACAJ,GAEK,2BACF5B,GADL,IAEEc,SAAS,EACTO,eAAe,GAAD,mBAAMrB,EAAMqB,gBAAZ,CAA4BO,IAC1CpC,SAAS,IAEb,KAAKlD,IACH,OAAO,2BAAK0D,GAAZ,IAAmBvH,MAAOwH,EAAOxH,QACnC,KAAKwD,IACH,OAAO,2BAAK+D,GAAZ,IAAmBR,SAAS,IAC9B,KAAKtD,IACH,OAAO,2BACF8D,GADL,IAEEc,SAAS,EACTxI,KAAM0H,EAAM1H,KAAK2I,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOlB,EAAO0B,YACrDnC,SAAS,IAEb,KAAKrD,IACH,OAAO,2BAAK6D,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IACnD,KAAK1D,IACH,OAAO,2BAAKkE,GAAZ,IAAmBR,SAAS,IAC9B,KAAKzD,IACHgG,QAAQC,IAAI,iBACZD,QAAQC,IACN,qEACA/B,EAAO0B,UAET,IAAIM,EAAWjC,EAAM1H,KAAK4J,WAAU,SAACC,GAAD,OAASA,EAAIhB,KAAOlB,EAAO0B,YAC3DS,EAAWpC,EAAM1H,KAOrB,OANA8J,EAASH,GAAUI,cAAgBpC,EAAOqC,OAMnC,2BAAKtC,GAAZ,IAAmBc,SAAS,EAAMxI,KAAM8J,EAAU5C,SAAS,IAC7D,KAAKxD,IACH,OAAO,2BAAKgE,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IAEnD,QACE,OAAOQ,I,QC/GPa,EAAe,CACnBvI,KAAM,GACNkH,SAAS,EACT/G,MAAO,KACPqI,SAAS,EACTC,QAAQ,GA0BKwB,EAvBS,WAAmC,IAAlCvC,EAAiC,uDAAzBa,EAAcZ,EAAW,uCACxD,OAAQA,EAAO9H,MACb,KAAKe,IACH,OAAO,2BAAK8G,GAAZ,IAAmBR,SAAS,IAC9B,KAAKpG,IACH,OAAO,2BAAK4G,GAAZ,IAAmBc,SAAS,EAAMxI,KAAM2H,EAAO3H,KAAMkH,SAAS,IAChE,KAAKlG,IACH,OAAO,2BAAK0G,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IACnD,KAAKhG,IACH,OAAO,2BAAKwG,GAAZ,IAAmBR,SAAS,IAC9B,KAAK9F,IACH,IAAIuI,EAAWjC,EAAM1H,KAAK4J,WAAU,SAACC,GAAD,OAASA,EAAIhB,KAAOlB,EAAO3H,KAAK6I,MAChEiB,EAAWpC,EAAM1H,KAErB,OADA8J,EAASH,GAAUK,OAAS,WACrB,2BAAKtC,GAAZ,IAAmBc,SAAS,EAAMxI,KAAM8J,EAAU5C,SAAS,IAC7D,KAAK5F,IACH,OAAO,2BAAKoG,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IAEnD,QACE,OAAOQ,I,QC9BPa,EAAe,CACnBvI,KAAM,GACNkH,SAAS,EACT/G,MAAO,KACPqI,SAAS,EACTC,QAAQ,GAiBKyB,EAdK,WAAmC,IAAlCxC,EAAiC,uDAAzBa,EAAcZ,EAAW,uCACpD,OAAQA,EAAO9H,MACb,KAAK0C,IACH,OAAO,2BAAKmF,GAAZ,IAAmBR,SAAS,IAC9B,KAAKzE,IACH,OAAO,2BAAKiF,GAAZ,IAAmBc,SAAS,EAAMxI,KAAM2H,EAAO3H,KAAMkH,SAAS,IAChE,KAAKvE,IACH,OAAO,2BAAK+E,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IAEnD,QACE,OAAOQ,I,QClBPa,EAAe,CACnBvI,KAAM,GACNkH,SAAS,EACT/G,MAAO,KACPqI,SAAS,EACTC,QAAQ,GAkBK0B,EAfG,WAAmC,IAAlCzC,EAAiC,uDAAzBa,EAAcZ,EAAW,uCAChD,OAAQA,EAAO9H,MACX,KAAKgD,IACD,OAAO,2BAAK6E,GAAZ,IAAmBR,SAAS,IAChC,KAAKnE,IACD,OAAO,2BAAK2E,GAAZ,IAAmBc,SAAS,EAAMxI,KAAM2H,EAAO3H,KAAMkH,SAAS,IAClE,KAAKjE,IACD,OAAO,2BAAKyE,GAAZ,IAAmBvH,MAAOwH,EAAOxH,QAErC,QACI,OAAOuH,I,QCNba,EAAe,CACnBvI,KAAM,GACNkH,SAAS,EACT/G,MAAO,KACPiK,YAAY,EACZ3B,QAAQ,EACRD,SAAS,EACT6B,kBAAmB,GACnBC,yBAAyB,EACzBC,sBAAuB,KACvBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,uBAAwB,KACxBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,yBAA0B,MA2EbC,EAxEE,WAAmC,IAAlCpD,EAAiC,uDAAzBa,EAAcZ,EAAW,uCACjD,OAAQA,EAAO9H,MACb,KAAKuF,IACH,OAAO,2BAAKsC,GAAZ,IAAmBR,SAAS,IAC9B,KAAK7B,IACH,OAAO,2BAAKqC,GAAZ,IAAmBc,SAAS,EAAMxI,KAAM2H,EAAO3H,KAAMkH,SAAS,IAChE,KAAK5B,IACH,OAAO,2BAAKoC,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IACnD,KAAKlB,IACH,OAAO,2BAAK0B,GAAZ,IAAmBR,SAAS,IAC9B,KAAKjB,IACH,OAAO,2BAAKyB,GAAZ,IAAmB0C,YAAY,EAAMpK,KAAM2H,EAAO3H,KAAMkH,SAAS,IACnE,KAAKhB,IACH,OAAO,2BAAKwB,GAAZ,IAAmBvH,MAAOwH,EAAOxH,MAAO+G,SAAS,IACnD,KAAKrB,IACH,OAAO,2BAAK6B,GAAZ,IAAmB+C,0BAA0B,IAC/C,KAAK3E,IACH,OAAO,2BACF4B,GADL,IAEEiD,0BAA0B,EAC1BI,cAAepD,EAAO3H,KACtByK,0BAA0B,IAE9B,KAAK1E,IACH,OAAO,2BACF2B,GADL,IAEEgD,uBAAwB/C,EAAOxH,MAC/BsK,0BAA0B,IAE9B,KAAK/E,IACH,OAAO,2BACFgC,GADL,IAEE4C,yBAAyB,EACzBK,0BAA0B,IAE9B,KAAKhF,IACH,OAAO,2BACF+B,GADL,IAEE2C,kBAAmB1C,EAAO3H,KAC1BwK,yBAAyB,EACzBF,yBAAyB,IAE7B,KAAK1E,IACH,OAAO,2BACF8B,GADL,IAEE6C,sBAAuB5C,EAAOxH,MAC9BmK,yBAAyB,IAE7B,KAAK/E,IACH,OAAO,2BAAKmC,GAAZ,IAAmB4C,yBAAyB,IAC9C,KAAK9E,IAEH,OADAiE,QAAQC,IAAI,qBAAuBsB,KAAKC,UAAUtD,EAAO3H,KAAKkL,UACvD,2BACFxD,GADL,IAEEkD,4BAA4B,EAC5BP,kBAAmB3C,EAAM2C,kBAAkB1B,QACzC,SAACC,GAAD,OAAUA,EAAKC,KAAOlB,EAAO3H,KAAKkL,WAEpCZ,yBAAyB,IAE7B,KAAK7E,IACH,OAAO,2BACFiC,GADL,IAEEmD,yBAA0BlD,EAAOxH,MACjCmK,yBAAyB,IAG7B,QACE,OAAO5C,IC/EEyD,EAbEC,YAAgB,CAC/B9C,MAAO+C,EACP5D,KAAM6D,EACN5C,MAAO6C,EACPzC,eAAgB0C,EAChBC,OAAQC,EACRzB,gBAAgB0B,EAClBzB,YAAY0B,EACZzB,UAAU0B,EACVf,SAASgB,I,4DCAQC,I,YAqBAC,I,YAgBAC,I,YAqBAC,I,YAgBAC,I,YAgBQC,IA1FlB,SAAUL,KAAV,iEACL,OADK,SACCM,YAAUlG,IAAD,UAAS,2FAGP,OAHoBmG,EAAb,EAAaA,QAC3BC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SADO,kBAGDC,YACjBC,IAAgBC,mBAChBJ,EACAC,GANkB,YAGdI,EAHc,QAQXzF,QARW,iBASlB,OATkB,SASZ0F,YAAIC,YAAgBF,EAAKzF,UATb,+BAYlB,OADAI,aAAawF,QAAQnG,IAAYgG,EAAKA,KAAKI,KAXzB,UAYZH,YAAII,YAAcL,EAAKA,KAAKI,MAZhB,gCAepB,OAfoB,oCAedH,YAAIC,YAAgB,EAAD,KAfL,0DADnB,wCAqBA,SAAUd,KAAV,iEACL,OADK,SACCK,YAAUhG,IAAD,UAAU,oFAED,OAFC,kBAEKoG,YAAKC,IAAgBQ,gBAF1B,eAGDC,KADdC,EAFe,yBAKnB,OADA7F,aAAa8F,WAAWzG,KAJL,SAKbiG,YAAIS,YAAeF,IALN,+BAOnB,OAPmB,UAObP,YAAIC,YAAgBM,EAAYjG,UAPnB,gCAUrB,OAVqB,oCAUf0F,YAAIC,YAAgB,EAAD,KAVJ,0DADpB,wCAgBA,SAAUb,KAAV,iEACL,OADK,SACCI,YAAU9F,IAAD,UAAS,2FAGP,OAHoB+F,EAAb,EAAaA,QAC3BC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SADO,kBAGDC,YACjBC,IAAgBa,mBAChBhB,EACAC,GANkB,YAGdI,EAHc,QAQXzF,QARW,iBASlB,OATkB,SASZ0F,YAAIC,YAAgBF,EAAKzF,UATb,+BAYlB,OADAI,aAAawF,QAAQnG,IAAYgG,EAAKA,KAAKI,KAXzB,UAYZH,YAAIW,YAAcZ,EAAKA,KAAKI,MAZhB,gCAepB,OAfoB,oCAedH,YAAIC,YAAgB,EAAD,KAfL,0DADnB,wCAqBA,SAAUZ,KAAV,iEACL,OADK,SACCG,YAAUxF,IAAD,UAAqB,oFAEnB,OAFmB,kBAEb4F,YAAKC,IAAgBe,qBAFR,YAE1Bb,EAF0B,QAGvBzF,QAHuB,gBAI9B,OAJ8B,SAIxB0F,YAAIC,YAAgBF,EAAKzF,UAJD,8BAO9B,OADAI,aAAawF,QAAQnG,IAAYgG,EAAKA,KAAKI,KANb,UAOxBH,YAAIa,YAA8Bd,EAAKA,KAAKI,MAPpB,gCAUhC,OAVgC,oCAU1BH,YAAIC,YAAgB,EAAD,KAVO,0DAD/B,wCAgBA,SAAUX,KAAV,iEACL,OADK,SACCE,YAAUtF,IAAD,UAAuB,oFAErB,OAFqB,kBAEf0F,YAAKC,IAAgBiB,uBAFN,YAE5Bf,EAF4B,QAGzBzF,QAHyB,gBAIhC,OAJgC,SAI1B0F,YAAIC,YAAgBF,EAAKzF,UAJC,8BAOhC,OADAI,aAAawF,QAAQnG,IAAYgG,EAAKA,KAAKI,KANX,UAO1BH,YAAIe,YAAgChB,EAAKA,KAAKI,MAPpB,gCAUlC,OAVkC,oCAU5BH,YAAIC,YAAgB,EAAD,KAVS,0DADjC,wCAgBQ,SAAUV,KAAV,iEACb,OADa,SACPyB,YAAI,CACRC,YAAK/B,IACL+B,YAAK9B,IACL8B,YAAK7B,IACL6B,YAAK5B,IACL4B,YAAK3B,MANM,wC,0BC7FE4B,I,YA6BAC,I,YAoBQ5B,IAjDlB,SAAU2B,KAAV,iEACL,OADK,SACC1B,YAAUvM,IAAD,UAAwB,sFAErB,OAFqB,kBAEf2M,YAAKC,IAAgBuB,gBAAiB,QAAS,CACjEC,KAAM,CACJC,UAAW,YACXC,MAAO,UALwB,OAqBnC,OAnBM1F,EAF6B,OAQ/B2F,EAAa3F,EAAM4F,KAAI,SAACC,GAC1B,IAAIC,EAAI,IAAIC,KAAK,GAEjB,OADAD,EAAEE,mBAAmBH,EAAQI,WACtB,2BACFJ,GADL,IAEEI,UAAU,GAAD,OAAKH,QAIlB/E,QAAQC,IACN,8EACAhB,GAnBiC,SAqB7BmE,YAAI9M,aAAkBsO,IArBO,+BAwBnC,OAxBmC,0BAuBnC5E,QAAQC,IAAI,iBAvBuB,UAwB7BmD,YAAI3M,aAAe,EAAD,KAxBW,0DADlC,wCA6BA,SAAU8N,KAAV,iEACL,OADK,SACC3B,YAAU/L,IAAD,UAAmB,WAAWqH,GAAX,iEAO9B,OAP8B,SAE9B8B,QAAQC,IACN,uEACA/B,GAJ4B,SAOxB8E,YAAKC,IAAgBsB,WAAYrG,EAAO/H,QAPhB,OAQ9B,OAR8B,SAQxBiN,YAAItM,aAAkBoH,EAAO/H,SARL,8BAc9B,OAd8B,yBAU9B6J,QAAQC,IACN,sEADF,MAV8B,UAcxBmD,YAAIpM,aAAgB,KAAM0G,UAdF,yDAD7B,wCAoBQ,SAAUiF,KAAV,iEACb,OADa,SACPyB,YAAI,CACRC,YAAKC,IACLD,YAAKE,MAHM,wC,0BCzDEY,I,YAcQxC,IAdlB,SAAUwC,KAAV,iEACL,OADK,SACCvC,YAAUpK,IAAD,UAA6B,oFAEjB,OAFiB,kBAEXwK,YAC3BC,IAAgBuB,gBAChB,kBAJsC,OAMxC,OAJMnF,EAFkC,gBAMlC+D,YAAI3K,aAA2B4G,IANG,8BAQxC,OARwC,mCAQlC+D,YAAIzK,aAAwB,EAAD,KARO,yDADvC,wCAcQ,SAAUgK,KAAV,iEACb,OADa,SACPyB,YAAI,CAACC,YAAKc,MADH,wC,yBCEEC,I,YA4BAC,I,YAwCAC,I,YAWAC,I,YAeAC,I,YAmBAC,I,YAgBQ9C,IAjIlB,SAAUyC,KAAV,iEACL,OADK,SACCxC,YAAUnJ,IAAD,UAAoB,sFAEf,OAFe,kBAETuJ,YAAKC,IAAgBuB,gBAAiB,UAAW,CACrEC,KAAM,CACJC,UAAW,YACXC,MAAO,UALoB,OAgB/B,OAdMhF,EAFyB,OAQ3BiF,EAAajF,EAAQkF,KAAI,SAACC,GAC5B,IAAIC,EAAI,IAAIC,KAAK,GAEjB,OADAD,EAAEW,cAAcZ,EAAQI,UAAUS,SAC3B,2BACFb,GADL,IAEEI,UAAU,GAAD,OAAKH,QAba,SAgBzB3B,YAAIwC,aAAmBhB,IAhBE,8BAsB/B,OAtB+B,yBAkB/B5E,QAAQC,IACN,qEADF,MAlB+B,UAsBzBmD,YAAIyC,aAAgB,EAAD,KAtBM,yDAD9B,wCA4BA,SAAUR,KAAV,iEACL,OADK,SACCzC,YAAUhJ,IAAD,UAA8B,wFAEZ,OAFY,kBAENoJ,YACjCC,IAAgBuB,gBAChB,kBAJuC,OAkBpB,OAhBfsB,EAFmC,OAOrCC,EAAoBD,EAAqBjB,KAAI,SAACmB,GAAD,OAC/CA,EAAI,SAAaC,QAAQ,MAAO,OAElCjG,QAAQC,IACN,iFACA8F,GAEEA,EAAkBG,OAAS,KAC7BH,EAAkBG,OAAS,IAfY,SAkBdlD,YACzBC,IAAgBuB,gBAChB,UACA,CACE2B,QAAS,CACP,CACEzB,UAAW,MACX0B,SAAU,KACVC,MAAON,MA1B0B,OAmCzC,OAjBMO,EAlBmC,OA+BzCtG,QAAQC,IACN,4EACAqG,GAjCuC,UAmCnClD,YAAImD,aAA2BD,IAnCI,oHADxC,wCAwCA,SAAUhB,KAAV,iEACL,OADK,SACC1C,YAAUpI,IAAD,UAAwB,WAAW0D,GAAX,iEAEnC,OAFmC,kBAE7B8E,YAAKC,IAAgBuD,qBAAsBtI,EAAO0B,UAFrB,OAGnC,OAHmC,SAG7BwD,YAAIqD,aAAsBvI,EAAO0B,WAHJ,8BAKnC,OALmC,mCAK7BwD,YAAIsD,aAAoB,KAAMhJ,UALD,yDADlC,wCAWA,SAAU6H,KAAV,iEACL,OADK,SACC3C,YAAUvI,IAAD,UAA4B,WAAW6D,GAAX,iEAEvC,OAFuC,kBAEjC8E,YAAKC,IAAgBsC,kBAAmBrH,EAAO0B,UAFd,OAGvC,OAHuC,SAGjCwD,YAAIuD,aAAyBzI,EAAO0B,WAHH,8BAUvC,OAVuC,yBAKvCI,QAAQC,IACN,qEADF,MALuC,UAUjCmD,YAAIwD,aAAuB,KAAMlJ,UAVA,yDADtC,wCAeA,SAAU8H,KAAV,iEACL,OADK,SACC5C,YAAU1I,IAAD,UAAqB,WAAWgE,GAAX,iEAOhC,OAPgC,SAEhC8B,QAAQC,IACN,uEACA/B,GAJ8B,SAO1B8E,YAAKC,IAAgB4D,oBAAqB3I,EAAO0B,UAPvB,OAQhC,OARgC,SAQ1BwD,YAAI0D,aAAoB5I,EAAO0B,WARL,8BAchC,OAdgC,yBAUhCI,QAAQC,IACN,sEADF,MAVgC,UAc1BmD,YAAIwD,aAAuB,KAAMlJ,UAdP,yDAD/B,wCAmBA,SAAU+H,KAAV,iEACL,OADK,SACC7C,YAAU7I,IAAD,UAAiC,WAAWmE,GAAX,iEAE5C,OAF4C,kBAEtC8E,YACJC,IAAgBwC,uBAChBvH,EAAO0B,SACP1B,EAAOqC,QALmC,OAO5C,OAP4C,SAOtC6C,YAAI2D,aAA8B7I,EAAO0B,SAAU1B,EAAOqC,SAPpB,8BAS5C,OAT4C,mCAStC6C,YAAI4D,aAA4B,EAAD,KATO,yDAD3C,wCAgBQ,SAAUrE,KAAV,iEACb,OADa,SACPyB,YAAI,CACRC,YAAKe,IACLf,YAAKgB,IACLhB,YAAKiB,IACLjB,YAAKkB,IACLlB,YAAKmB,IACLnB,YAAKoB,MAPM,wC,0BC3IEwB,I,YAuBAC,I,YAWQvE,IAlClB,SAAUsE,KAAV,iEACL,OADK,SACCrE,YAAUzL,IAAD,UAA4B,oFAE1B,OAF0B,kBAEpB6L,YACjBC,IAAgBuB,gBAChB,mBAJqC,OAWvC,OATMjO,EAFiC,OAMvCyJ,QAAQC,IACN,gFACA1J,GARqC,SAWjC6M,YAAIhM,aAA0Bb,IAXG,8BAkBvC,OAlBuC,yBAavCyJ,QAAQC,IACN,iFACA,KAAMvC,SAf+B,UAkBjC0F,YAAI9L,aAAwB,EAAD,KAlBM,yDADtC,wCAuBA,SAAU4P,KAAV,iEACL,OADK,SACCtE,YAAUnL,IAAD,UAAwC,WAAWyG,GAAX,iEAEnD,OAFmD,kBAE7C8E,YAAKC,IAAgBkE,8BAA+BjJ,EAAO3H,MAFd,OAGnD,OAHmD,SAG7C6M,YAAI1L,aAAqCwG,EAAO3H,OAHH,8BAKnD,OALmD,mCAK7C6M,YAAIxL,aAAmC,EAAD,KALO,yDADlD,wCAWQ,SAAU+K,KAAV,iEACb,OADa,SACPyB,YAAI,CACRC,YAAK4C,IACL5C,YAAK6C,MAHM,wC,0BCrCEE,I,YAkCQzE,IAlClB,SAAUyE,KAAV,iEACL,OADK,SACCxE,YAAU9J,IAAD,UAAuB,sFAErB,OAFqB,kBAEfkK,YAAKC,IAAgBuB,gBAAiB,QAAS,CAChEC,KAAM,CACJC,UAAW,YACXC,MAAO,UALuB,OAsBlC,OApBMpO,EAF4B,OAQ9BqO,EAAarO,EAAKsO,KAAI,SAACC,GACzB,IAAIC,EAAI,IAAIC,KAAK,GAEjB,OADAD,EAAEW,cAAcZ,EAAQI,UAAUS,SAC3B,2BACFb,GADL,IAEEI,UAAU,GAAD,OAAKH,QAIlB/E,QAAQC,IACN,8EACA2E,GAnBgC,SAsB5BxB,YAAIrK,aAAsB6L,IAtBE,+BA4BlC,OA5BkC,0BAwBlC5E,QAAQC,IACN,6EACA,KAAMvC,SA1B0B,UA4B5B0F,YAAInK,aAAoB,EAAD,KA5BK,0DADjC,wCAkCQ,SAAU0J,KAAV,iEACb,OADa,SACPyB,YAAI,CACRC,YAAK+C,MAFM,wC,0BClCEC,I,YAWQ1E,IAXlB,SAAU0E,KAAV,iEACL,OADK,SACCzE,YAAUxJ,IAAD,UAAsB,oFAEpB,OAFoB,kBAEd4J,YAAKC,IAAgBqE,gBAAiB,SAFxB,OAGjC,OADM/Q,EAF2B,gBAG3B6M,YAAI/J,aAAoB9C,IAHG,8BAKjC,OALiC,mCAK3B6M,YAAI7J,aAAkB,EAAD,KALM,yDADhC,wCAWQ,SAAUoJ,KAAV,iEACb,OADa,SACPyB,YAAI,CACRC,YAAKgD,MAFM,wC,yBCAEE,I,YAUAC,I,YAUAC,I,YAiBAC,I,YAwBAC,I,YAeQhF,IA5ElB,SAAU4E,KAAV,iEACL,OADK,SACC3E,YAAUjH,IAAD,UAAiC,WAAWuC,GAAX,iEAE5C,OAF4C,kBAEtC8E,YAAKC,IAAgB2E,cAAe1J,GAFE,OAG5C,OAH4C,SAGtCkF,YAAIyE,aAA+B3J,EAAO3H,OAHJ,8BAK5C,OAL4C,mCAKtC6M,YAAI0E,aAA6B,EAAD,KALM,yDAD3C,wCAUA,SAAUN,KAAV,iEACL,OADK,SACC5E,YAAUrG,IAAD,UAA+B,oFAE7B,OAF6B,kBAEvByG,YAAKC,IAAgBuE,uBAFE,OAG1C,OADMjR,EAFoC,gBAGpC6M,YAAI2E,aAA6BxR,IAHG,8BAK1C,OAL0C,mCAKpC6M,YAAI4E,aAA2B,EAAD,KALM,yDADzC,wCAUA,SAAUP,KAAV,iEACL,OADK,SACC7E,YAAUxG,IAAD,UAA2B,WAAW8B,GAAX,yEAErB,OAFqB,kBAEf8E,YACrBC,IAAgBgF,YAChB/J,EAAO3H,KAAK2R,SACZhK,EAAO3H,KAAK4R,MALwB,OAStC,OAPMC,EAFgC,OAOtCpI,QAAQC,IAAI,eAAiBmI,GACzB7R,EAAO,CAAE8R,SAAUD,EAAUF,SAAUhK,EAAO3H,KAAK2R,UARjB,SAShClF,YAAKC,IAAgBqF,sBAAuB/R,GATZ,OAUtC,OAVsC,UAUhC6M,YAAIlC,gBAV4B,gCAYtC,OAZsC,oCAYhCkC,YAAInC,aAAuB,EAAD,KAZM,0DADrC,wCAiBA,SAAUyG,KAAV,iEACL,OADK,SACC9E,YAAU3G,IAAD,UAA0B,sFAExB,OAFwB,kBAElB+G,YAAKC,IAAgByE,kBAFH,OAiBrC,OAfMnR,EAF+B,OAGrCyJ,QAAQC,IACN,yEACA1J,GAGEqO,EAAarO,EAAKsO,KAAI,SAACC,GACzB,IAAIC,EAAI,IAAIC,KAAK,GAEjB,OADAD,EAAEW,cAAcZ,EAAQI,UAAUS,SAC3B,2BACFb,GADL,IAEEI,UAAU,GAAD,OAAKH,QAbmB,SAiB/B3B,YAAIrC,aAAwB6D,IAjBG,+BAmBrC,OAnBqC,oCAmB/BxB,cAnB+B,0DADpC,wCAwBA,SAAUuE,KAAV,iEACL,OADK,SACC/E,YAAU9G,IAAD,UAA6B,WAAWoC,GAAX,iEAMxC,OALF8B,QAAQC,IACN,2EACA/B,EAAO3H,MAHiC,kBAMlCyM,YAAKC,IAAgBsF,oBAAqBrK,GANR,OAOxC,OAPwC,SAOlCkF,YAAIjC,aAA2BjD,EAAO3H,OAPJ,8BASxC,OATwC,mCASlC6M,YAAIhC,aAAyB,EAAD,KATM,yDADvC,wCAeQ,SAAUuB,KAAV,iEACb,OADa,SACPyB,YAAI,CACRC,YAAKkD,IACLlD,YAAKmD,IACLnD,YAAKoD,IACLpD,YAAKqD,IACLrD,YAAKsD,MANM,wC,gBCzFUhF,IAAV,SAAUA,GAAS6F,GAAnB,iEACb,OADa,SACPpE,YAAI,CACRvC,KACAC,KACAC,KACA0G,KACAvG,KACJC,KACAC,KACAC,OATe,wCCNf,IAAMqG,GAAiBC,cAEjBC,GAAc,CAACF,IAqBrB,IAEeG,GArBf,SAAwBC,GAEtB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEL,EAAQM,YAAYzH,EAAUoH,EAAgBC,EAClDK,IAAe,WAAf,EAAmBR,MAYrB,OATAF,GAAeW,IAAI1G,IASZkG,EAGKS,G,yGCxBCC,iBADK,SAAAxR,GAAK,OAAI,eAAC,KAAD,eAAsBA,MACZ,CACrCyR,SAAS,I,wCCMIC,GATf,gKACC,WACC,MAA6BC,KAAK3R,MAA1B3B,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,UACd,OACC,qCAAG0R,IAAMC,cAAcxT,EAAM,CAAE6B,UAAWA,UAJ7C,GAA0B4R,a,kDCMpBC,GAAmB,CACvB,CACEC,IAAK,OACLC,KAAK,GAAD,OAAKpP,IAAL,SACJqP,MAAO,OACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,KAGPC,GAAe,CACnB,CACEP,IAAK,QACLC,KAAK,GAAD,OAAKpP,IAAL,UACJqP,MAAO,QACPC,KAAMK,KACNH,YAAY,EACZC,QAAS,KAGPG,GAAiB,CACrB,CACET,IAAK,UACLC,KAAK,GAAD,OAAKpP,IAAL,YACJqP,MAAO,UACPC,KAAMK,KACNH,YAAY,EACZC,QAAS,KAGPI,GAAwB,CAC5B,CACEV,IAAK,kBACLC,KAAK,GAAD,OAAKpP,IAAL,oBACJqP,MAAO,kBACPC,KAAMK,KACNH,YAAY,EACZC,QAAS,KAIPK,GAAkB,CACtB,CACEX,IAAK,WACLC,KAAK,GAAD,OAAKpP,IAAL,oBACJqP,MAAO,mBACPC,KAAMS,KACNP,YAAY,EACZC,QAAS,KAGPO,GAAqB,CACzB,CACEb,IAAK,cACLC,KAAK,GAAD,OAAKpP,IAAL,gBACJqP,MAAO,cACPC,KAAMW,KACNT,YAAY,EACZC,QAAS,KAGPS,GAAkB,CACtB,CACEf,IAAK,WACLC,KAAK,GAAD,OAAKpP,IAAL,aACJqP,MAAO,WACPC,KAAMa,KACNX,YAAY,EACZC,QAAS,KAiBEW,GAZO,UACjBlB,GACAQ,GACAE,GACAC,GAEAC,GACAE,GACAE,IC8HUG,G,qGAhNd,SAAsBC,GACrB,IAAIC,EAAWD,EAAKE,MAAM,UAAY,GACtC,QAASD,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKC,gB,0BAS5D,SAAoBC,EAASxB,GAC5B,GAAIwB,EAAQxB,OAASA,EACnB,OAAOwB,EAET,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAChDD,EAAQ/B,KAAKkC,aAAaJ,EAAQE,GAAI1B,IAErC,OAAOyB,EAIV,OAAOA,I,8BAQR,SAAwBI,GACvB,IAAIA,EACH,MAAO,OASR,SAASC,EAAOC,GAAI,MAAwB,MAAhBA,EAAEC,OAAO,GAAcD,EAAEE,UAAU,EAAE,GAAGF,EAEpE,OAD6B,IAJFG,SAAUJ,EAHjBD,GAG4BI,UAAU,EAAE,GAAG,IAIjB,IAH9C,SAAgBF,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHhDE,CAAON,GAMwC,IAF9D,SAAgBE,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHjDG,CAAOP,IAKiD,IARpD,IAUV,OAEA,U,wBAUT,SAAkBQ,EAAOC,GACxB,IAAIC,EAAIL,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCO,EAAIN,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCQ,EAAIP,SAASG,EAAMJ,UAAU,EAAE,GAAG,IACtCM,EAAIL,SAASK,GAAK,IAAMD,GAAW,KAInCE,GAHAA,EAAIN,SAASM,GAAK,IAAMF,GAAW,MAG5B,IAAKE,EAAE,IACdC,GAHAA,EAAIP,SAASO,GAAK,IAAMH,GAAW,MAG5B,IAAKG,EAAE,IACd,IAAMC,EAAiC,KAHvCH,EAAKA,EAAE,IAAKA,EAAE,KAGCI,SAAS,IAAIzG,OAAhB,WAAoCqG,EAAEI,SAAS,KAAQJ,EAAEI,SAAS,IACxEC,EAAiC,IAA1BJ,EAAEG,SAAS,IAAIzG,OAAhB,WAAoCsG,EAAEG,SAAS,KAAQH,EAAEG,SAAS,IACxEE,EAAiC,IAA1BJ,EAAEE,SAAS,IAAIzG,OAAhB,WAAoCuG,EAAEE,SAAS,KAAQF,EAAEE,SAAS,IAC9E,MAAM,IAAN,OAAWD,GAAX,OAAgBE,GAAhB,OAAqBC,K,uBAQtB,SAAiBC,GAChB,IAAMC,EAAO,SAAAC,GAAG,OAAKA,EAAI/G,QAAQ,cAAc,KACzCgH,EAAUH,EAAKb,UAAUa,EAAKI,QAAQ,MAAMC,MAAM,KACvDC,EAAIlB,SAASa,EAAKE,EAAQ,GAAGhB,UAAU,IAAK,IAC5CoB,EAAInB,SAASa,EAAKE,EAAQ,IAAK,IAC/BK,EAAIpB,SAASa,EAAKE,EAAQ,IAAK,IAC/BM,EAAIC,WAAWT,EAAKE,EAAQ,GAAGhB,UAAU,EAAGgB,EAAQ,GAAG/G,OAAS,KAAKuH,QAAQ,GACvEC,EAAW,CACjBN,EAAET,SAAS,IACXU,EAAEV,SAAS,IACXW,EAAEX,SAAS,IACXgB,KAAKC,MAAU,IAAJL,GAASZ,SAAS,IAAIV,UAAU,EAAG,IAQ/C,OALAyB,EAASG,SAAQ,SAAUC,EAAMC,GACZ,IAAhBD,EAAK5H,SACRwH,EAASK,GAAK,IAAMD,MAGhB,IAAN,OAAYJ,EAASM,KAAK,O,wBAU3B,SAAkBC,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,O,6BAUR,SAAuBZ,EAAGD,EAAGvD,GAC5B,MAAqB,kBAAXwD,EAAExD,IAAuC,kBAAXuD,EAAEvD,GAClCwD,EAAExD,GAAOuD,EAAEvD,GAGE,kBAAXwD,EAAExD,IAAuC,kBAAXuD,EAAEvD,IACzCwD,EAAIA,EAAExD,GAAKqE,gBACXd,EAAIA,EAAEvD,GAAKqE,gBACK,EAAId,EAAIC,EAAI,EAAI,OAHjC,I,yBAeD,SAAmBc,EAAMtE,EAAK1D,GAC7B,IAAI9P,EAAO8X,EAIX,OAHGA,IACF9X,EAAO8X,EAAKnP,QAAO,SAAA8G,GAAI,OAAIA,EAAK+D,KAAS1D,MAEnC9P,I,4BAUR,SAAsB8X,EAAMtE,EAAK1D,GAChC,IAAI9P,EAAO8X,EAIX,OAHGA,IACF9X,EAAO8X,EAAKnP,QAAO,SAAA8G,GAAI,OAAIA,EAAK+D,KAAS1D,MAEnC9P,I,4BASR,SAAsB8X,EAAMC,GAY3B,OADAD,EAAOA,EAAKnP,QAAO,SAAAmH,GAAK,OAVL,SAACL,GACnB,IAAK,IAAI+D,KAAO/D,EACf,GAAiB,MAAbA,EAAK+D,KAG2E,IAAhF/D,EAAK+D,GAAK4C,WAAWpB,cAAc2B,QAAQoB,EAAM3B,WAAWpB,eAC/D,OAAO,EAIkBgD,CAAWlI,Q,2BASxC,SAAqBmI,GACpB,IAAIC,EAAc,GAClB,IAAK,IAAM1E,KAAOyE,EAAS,CAC1B,GAAIA,EAAQ7C,eAAe5B,GACVyE,EAAQzE,IAEvB0E,EAAYC,KAAK3E,GAIpB,OAAO0E,M,KC7JF,SAASE,GAAkBpT,GAChC,MAAO,CACLnF,KAAMqI,EACNlD,aC9CJ,IAAQqT,GAAYC,KAAZD,QACAE,GAAkBC,KAAlBD,cAEFE,GAAY,SAACC,EAAYC,GAAb,OAChBD,EAAa,eAAC,GAAD,CAAa7P,GAAI8P,IAAgBA,EAAUvC,YAEpDwC,GAAiB,SAACpF,GACtB,IAAIqF,EAAU,GACVC,EAAY,GAChB,GAAItF,EAEF,IADA,IAAMuF,EAAMvF,EAAIoD,MAAM,KACboC,EAAQ,EAAGA,EAAQD,EAAIpJ,OAAQqJ,IAAS,CAC/C,IAAMC,EAAMF,EAAIC,GACDF,EAAL,IAAVE,EAA2BC,EAAiB,UAAMH,EAAN,YAAmBG,GAC/DJ,EAAQV,KAAKW,GAGjB,OAAOD,GAGHK,GAAiB,SAAC1X,GACvB,IAAQiD,EAA6EjD,EAA7EiD,aAAc0U,EAA+D3X,EAA/D2X,UAAWC,EAAoD5X,EAApD4X,eAAgBC,EAAoC7X,EAApC6X,aAAcjB,EAAsB5W,EAAtB4W,kBACzDkB,GAAYC,GAAMC,cAAcjB,MAAiBkB,SAAS,MAC1DC,EAAiB,WAClBJ,GACHlB,GAAkB,IAGnB,OACE,eAAC,KAAD,CACE9P,MAAO7D,IAAiBC,KAAiB,QAAU,OACnDiV,KAAK,SACLC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,QAACZ,QAAD,IAACA,OAAD,EAACA,EAAW3F,KACjCwG,gBAAiBpB,GAAc,OAACO,QAAD,IAACA,OAAD,EAACA,EAAW3F,KAC3C9R,UAAW0X,EAAiB,mBAAqB,GANnD,SAQG3E,GAAiBnG,KAAI,SAAC2L,GAAD,OACpBA,EAAKnG,QAAQnE,OAAS,EACpB,eAAC,KAAKuK,UAAN,CAEExG,MAAO+E,GAAUY,EAAcY,EAAKvG,OAFtC,SAIGuG,EAAKnG,QAAQxF,KAAI,SAAC6L,GAAD,OAChBA,EAAarG,QAAQnE,OAAS,EAC5B,eAAC0I,GAAD,CACE1E,KACEwG,EAAaxG,KACX,eAAC,GAAD,CAAM9T,KAAI,OAAEsa,QAAF,IAAEA,OAAF,EAAEA,EAAcxG,OACxB,KAGND,MAAO+E,GAAUY,EAAcc,EAAazG,OAP9C,SASGyG,EAAarG,QAAQxF,KAAI,SAAC8L,GAAD,OACxB,gBAAC,KAAKC,KAAN,WACGD,EAAczG,KACb,eAAC,GAAD,CAAM9T,KAAI,OAAEua,QAAF,IAAEA,OAAF,EAAEA,EAAezG,OACzB,KACJ,gCACG8E,GAAUY,EAAce,EAAc1G,SAEzC,eAAC,KAAD,CAAM4G,QAAS,kBAAMZ,KAAkBa,GAAIH,EAAc3G,SAP3C2G,EAAc5G,SAJ3B2G,EAAa3G,KAgBpB,gBAAC,KAAK6G,KAAN,WACGF,EAAaxG,KAAO,eAAC,GAAD,CAAM9T,KAAMsa,EAAaxG,OAAW,KACzD,gCAAO8E,GAAUY,EAAcc,EAAazG,SAC5C,eAAC,KAAD,CAAM4G,QAAS,kBAAMZ,KAAkBa,GAAIJ,EAAa1G,SAH1C0G,EAAa3G,SA3B5ByG,EAAKzG,KAoCZ,gBAAC,KAAK6G,KAAN,WACGJ,EAAKtG,KAAO,eAAC,GAAD,CAAM9T,KAAI,OAAEoa,QAAF,IAAEA,OAAF,EAAEA,EAAMtG,OAAW,KAC1C,gCAAO8E,GAAUY,EAAD,OAAeY,QAAf,IAAeA,OAAf,EAAeA,EAAMvG,SACpCuG,EAAKxG,KAAO,eAAC,KAAD,CAAM6G,QAAS,kBAAMZ,KAAkBa,GAAIN,EAAKxG,OAAW,OAH1DwG,EAAKzG,WAWzBgH,GAAgB,SAAChZ,GACrB,IAAQsD,EAA8BtD,EAA9BsD,YAAauU,EAAiB7X,EAAjB6X,aACrB,OACE,eAAC,KAAD,CAAMM,KAAK,aAAaC,MAAO,CAAEa,gBAAiB3V,GAAlD,SACG2P,GAAiBnG,KAAI,SAAC2L,GAAD,OACpBA,EAAKnG,QAAQnE,OAAS,EACpB,eAAC0I,GAAD,CAEEqC,eAAe,eACfhH,MACE,kCACGuG,EAAKtG,KAAO,eAAC,GAAD,CAAM9T,KAAI,OAAEoa,QAAF,IAAEA,OAAF,EAAEA,EAAMtG,OAAW,KAC1C,gCAAO8E,GAAUY,EAAcY,EAAKvG,YAN1C,SAUGuG,EAAKnG,QAAQxF,KAAI,SAAC6L,GAAD,OAChBA,EAAarG,QAAQnE,OAAS,EAC5B,eAAC0I,GAAD,CAEEqC,eAAe,eACf/G,KACEwG,EAAaxG,KACX,eAAC,GAAD,CAAM9T,KAAI,OAAEsa,QAAF,IAAEA,OAAF,EAAEA,EAAcxG,OACxB,KAEND,MAAO+E,GAAUY,EAAcc,EAAazG,OAR9C,SAUGyG,EAAarG,QAAQxF,KAAI,SAAC8L,GAAD,OACxB,gBAAC,KAAKC,KAAN,WACE,gCACG5B,GAAUY,EAAce,EAAc1G,SAEzC,eAAC,KAAD,CAAM6G,GAAIH,EAAc3G,SAJV2G,EAAc5G,SAV3B2G,EAAa3G,KAmBpB,gBAAC,KAAK6G,KAAN,WACGF,EAAaxG,KACZ,eAAC,GAAD,CAAM9T,KAAI,OAAEsa,QAAF,IAAEA,OAAF,EAAEA,EAAcxG,OACxB,KACJ,gCAAO8E,GAAUY,EAAcc,EAAazG,SAC5C,eAAC,KAAD,CAAM6G,GAAIJ,EAAa1G,SALT0G,EAAa3G,SA/B5ByG,EAAKzG,KA0CZ,gBAAC,KAAK6G,KAAN,WACGJ,EAAKtG,KAAO,eAAC,GAAD,CAAM9T,KAAI,OAAEoa,QAAF,IAAEA,OAAF,EAAEA,EAAMtG,OAAW,KAC1C,gCAAO8E,GAAUY,EAAD,OAAeY,QAAf,IAAeA,OAAf,EAAeA,EAAMvG,SACpCuG,EAAKxG,KAAO,eAAC,KAAD,CAAM8G,GAAIN,EAAKxG,OAAW,OAHzBwG,EAAKzG,WAwBhBmH,gBALS,SAAC,GAAe,IAAbrS,EAAY,EAAZA,MAEzB,MAAO,CAAE7D,aAD6B6D,EAA9B7D,aACeK,YADewD,EAAhBxD,eAIgB,CAAEsT,sBAA3BuC,EAbK,SAACnZ,GACnB,OAAOA,EAAM3B,OAASgF,KACpB,eAAC,GAAD,eAAoBrD,IAEpB,eAAC,GAAD,eAAmBA,OC3JfoZ,GAAUC,KAAVD,MAyBOD,gBALS,SAAC,GAAe,IAAbrS,EAAY,EAAZA,MAEzB,MAAO,CAAE9D,aAD+B8D,EAAhC9D,aACeC,aADiB6D,EAAlB7D,gBAITkW,EAvBQ,SAAC,GAAmF,IAAlFnW,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,aAAc0U,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,eAA0C,IAA1BC,aACxE7X,EAAQ,CAAEiD,eAAc0U,YAAYC,iBAAgBC,kBAD8C,UAExG,OACE,eAACuB,GAAD,CACElZ,UAAS,mBAAc+C,IAAiBqW,KAAe,gBAAkB,IACzEC,MAAOC,KACPC,UAAWzW,EAHb,SAKE,eAAC,cAAD,CAAY0W,UAAQ,EAApB,SACE,eAAC,GAAD,aACErb,KAAMgF,MACFrD,WCKCmZ,gBALS,SAAC,GAEvB,MAAO,CAAE7V,YAF4B,EAAZwD,MACjBxD,eAIK6V,EAnBO,SAAC,GAAwC,IAAvC7V,EAAsC,EAAtCA,YAAsC,IAAzBuU,aAC9B7X,EAAQ,CAAEsD,cAAauU,kBADgC,UAE7D,OACC,sBAAK3X,UAAS,kBAAa6X,GAAM4B,iBAAiBrW,IAAgB8U,MAAO,CAACa,gBAAiB3V,GAA3F,SACC,sBAAKpD,UAAU,kBAAf,SACC,eAAC,GAAD,aACC7B,KAAMub,MACF5Z,W,mBCRH0R,GAAO,eAACmI,GAAA,EAAD,CAAiBzB,MAAO,CAAE0B,SAAU,IAAMC,MAAI,IAErDC,GAAU,SAACha,GAChB,IAAQia,EAAiBja,EAAjBia,MAAOC,EAAUla,EAAVka,MACf,OACC,sBAAKha,UAAS,uBAAkB+Z,EAAlB,kBAAiCC,GAA/C,SACC,eAAC,KAAD,CAAMC,UAAWzI,QAUpBsI,GAAQzZ,aAAe,CACtB0Z,MAAO,SACPC,MAAO,UAGOF,U,UCnBPjD,GAAkBC,KAAlBD,cAEFqD,GAAqB,SAACpa,EAAO8X,GACjC,IAAQ9U,EAA0BhD,EAA1BgD,aACFqX,EAD4Bra,EAAZoD,UACOwW,KAC7B,OAAG9B,IAAa9X,EAAMsa,WACb,EAEND,EACM,OAGD,GAAN,OADCrX,EACSuX,KAEAf,KAFV,OAMEgB,GAAU,SAACxa,GACf,IAAQgD,EAA2BhD,EAA3BgD,aACR,MAAgB,UADmBhD,EAAbya,SAEjBzX,EACM,yBAEF,sBAGLA,EACK,mBAEF,iBAGH0X,GAAiB,SAAC5C,EAAUwC,GAChC,OAAGxC,IAAawC,EACP,SAEA,QAoBInB,gBALS,SAAC,GAAe,IAAbrS,EAAY,EAAZA,MAEzB,MAAO,CAAE9D,aAD0B8D,EAA3B9D,aACeI,QADY0D,EAAb1D,WAIT+V,EAhBK,SAACnZ,GACnB,IAAM8X,GAAYC,GAAMC,cAAcjB,MAAiBkB,SAAS,MAChE,OACE,sBACE/X,UAAWwa,GAAe5C,EAAU9X,EAAMsa,YAC1ClC,MAAO,CAACmB,MAAM,GAAD,OAAKa,GAAmBpa,EAAO8X,KAF9C,SAGE,sBAAK6C,IAAKH,GAAQxa,GAAQ4a,IAAG,UAAKhY,IAAL,gB,oBCCpBuW,gBALS,SAAC,GAAe,IAAbrS,EAAY,EAAZA,MAEzB,MAAO,CAAE9D,aADyC8D,EAA1C9D,aACeC,aAD2B6D,EAA5B7D,aACeO,UADasD,EAAdtD,aAIE,CAAEoT,sBAA3BuC,EA5CU,SAAC,GAOnB,IANLlW,EAMI,EANJA,aACAO,EAKI,EALJA,UACAoT,EAII,EAJJA,kBACAe,EAGI,EAHJA,UACAC,EAEI,EAFJA,eAEI,IADJC,aAEM7X,EAAQ,CAAEiD,eAAc0U,YAAWC,iBAAgBC,kBADrD,UAGEgD,EAAU,WACdjE,GAAkB,IAGpB,OACE,eAAC,KAAD,CACEkE,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,QAASxX,EACTyX,UAAW,CAAEC,QAAS,GALxB,SAOE,gBAACnb,GAAA,EAAD,CAAMO,cAAc,SAASJ,UAAU,QAAvC,UACE,gBAACH,GAAA,EAAD,CAAMK,eAAe,UAAUD,WAAW,SAA1C,UACE,eAAC,GAAD,CAAMma,YAAY,IAClB,sBAAKpa,UAAU,YAAY4Y,QAAS,kBAAM+B,KAA1C,SACE,eAACM,GAAA,EAAD,SAGJ,sBAAKjb,UAAU,kBAAf,SACE,eAAC,cAAD,CAAYwZ,UAAQ,EAApB,SACE,eAAC,GAAD,aAAarb,KAAMgF,MAAmBrD,gB,8GChBlD,IAAMob,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GADY,qBAE5BD,GAF4B,IAEnD,2BAAwC,CAAC,IAA7BE,EAA4B,QACT,IAA3BA,EAAQlJ,QAAQnE,QAClBoN,EAAW5E,KAAK6E,GAEdA,EAAQlJ,QAAQnE,OAAS,GAC3BkN,EAAcG,EAAQlJ,QAASiJ,IAPkB,8BAUnD,OAAOA,EAGWF,CAAcpI,IAE3BwI,GAAkB,SAAAC,GACvB,OAAQA,GACP,IAAK,aACJ,OAAO,eAACtJ,GAAA,EAAD,CAAmBlS,UAAU,iBACrC,IAAK,OACJ,OAAO,eAACyb,GAAA,EAAD,CAAkBzb,UAAU,gBACpC,IAAK,aACJ,OAAO,eAAC0b,GAAA,EAAD,CAAmB1b,UAAU,iBACrC,IAAK,QACJ,OAAO,eAAC2b,GAAA,EAAD,CAAkB3b,UAAU,iBACpC,QACC,OAAO,OAqEK4b,GA7CK,SAAA9b,GACnB,IAAQ+b,EAAkC/b,EAAlC+b,OAAQC,EAA0Bhc,EAA1Bgc,MAAOlE,EAAmB9X,EAAnB8X,SAAUK,EAASnY,EAATmY,KACjC,EAA0B8D,mBAAS,IAAnC,oBAAO3N,EAAP,KAAc4N,EAAd,KACA,EAA8BD,mBAAS,IAAvC,oBAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,MAuBxB,OAJGP,GAHFM,EAASE,QAAQC,QAQjB,eAAC,KAAD,CACCC,IAAKJ,EACLnc,UAAS,2BAAsB4X,EAAU,YAAc,GAA9C,YAA6D,UAATK,EAAmB,QAAU,IAC1FuE,kBAAkB,sBAClBP,QAASA,EACTQ,SA3Be,WAChBT,EAAS,IACTE,EAAW,IACRJ,GACFA,KAwBAY,SApBe,SAAApG,GAChB0F,EAAS1F,GACT4F,EAAY5F,EApCa4E,GAAWtO,KAAI,SAACmB,GAC1C,IAAMyN,EAAWzN,EAAK+D,IAAIoD,MAAM,KAAK,GACrC,MAAO,CACN9G,MAAOL,EAAKgE,KACZ4K,MACC,eAAC,KAAD,CAAM9D,GAAI9K,EAAKgE,KAAf,SACC,uBAAK/R,UAAU,mBAAf,UACC,sBAAKA,UAAU,OAAf,SACEub,GAAgBC,KAElB,iCACC,sBAAKxb,UAAU,uBAAf,SAAsC,eAAC,GAAD,CAAamH,GAAI4G,EAAKiE,UAC5D,uBAAKhS,UAAU,0BAAf,UAA0Cwb,EAA1C,mBAwBqB,KAmBxBpN,MAAOA,EACPwO,aAAc,SAACC,EAAYC,GAAb,OACqD,IAAlEA,EAAO1O,MAAMkF,cAAc2B,QAAQ4H,EAAWvJ,gBAThD,SAYC,eAAC,KAAD,CAAOyJ,YAAY,YAAaC,OAAQ,eAACC,GAAA,EAAD,CAAgBjd,UAAU,cC1EtDiZ,gBALS,SAAC,GAEvB,MAAO,CAAE5V,eAF4B,EAAZuD,MACjBvD,kBAI8B,GAAzB4V,EArBU,SAACnZ,GACzB,IAAQ+b,EAAkC/b,EAAlC+b,OAAQC,EAA0Bhc,EAA1Bgc,MAAOzY,EAAmBvD,EAAnBuD,eACjB4U,EAAOJ,GAAM4B,iBAAiBpW,GAEpC,OACC,uBAAKrD,UAAS,qBAAgB6b,EAAS,oBAAsB,GAA/C,YAAqD5D,GAAQC,MAAO,CAACa,gBAAiB1V,GAApG,UACC,sBAAKrD,UAAU,kCAAf,SACC,eAAC,GAAD,CAAa8b,MAAOA,EAAOD,OAAQA,MAEpC,sBAAK7b,UAAU,YAAY4Y,QAASkD,EAApC,SACC,eAACoB,GAAA,EAAD,Y,wCCREC,GAAW,CACf,CACEnL,MAAO,kBACPC,KAAMa,KACNf,KAAM,mCAER,CACEC,MAAO,cACPC,KAAMmL,KACNrL,KAAM,MAkDKkH,eAAQ,KAAM,CAAE3O,aAAhB2O,EA9CW,SAAC,GAAiB,IAAf3O,EAAc,EAAdA,QACrB+S,EAAa,4BACbC,EACJ,uBAAKtd,UAAU,2BAAf,UACE,sBAAKA,UAAU,qBAAf,SACE,uBAAKA,UAAU,SAAf,UACE,eAAC,KAAD,CAAQud,KAAM,GAAI9C,IAAK4C,IACvB,uBAAKrd,UAAU,OAAf,UACE,qBAAIA,UAAU,OAAd,mBACA,uBAAMA,UAAU,aAAhB,2BAIN,sBAAKA,UAAU,mBAAf,SACE,gBAAC,KAAD,WACGmd,GAASvQ,KAAI,SAAC4Q,EAAI1H,GACjB,OACE,eAAC,KAAK6C,KAAN,UACE,qBAAG8E,KAAMD,EAAGzL,KAAZ,UACE,eAAC,GAAD,CAAM5T,KAAMqf,EAAGvL,OACf,uBAAMjS,UAAU,qBAAhB,SAAsCwd,EAAGxL,YAH7B8D,MAQpB,eAAC,KAAK6C,KAAN,CAAqCC,QAAS,SAAC8E,GAAD,OAAOpT,KAArD,SACE,kCACE,eAACqT,GAAA,EAAD,IACA,uBAAM3d,UAAU,qBAAhB,0BAHYmd,GAASlP,OAAS,WAU1C,OACE,eAAC,KAAD,CAAU2M,UAAU,cAAcgD,QAASN,EAAaO,QAAS,CAAC,SAAlE,SACE,eAAC,KAAD,CAAM7d,UAAU,2BAA2BiY,KAAK,aAAhD,SACE,eAAC,KAAKU,KAAN,UACE,eAAC,KAAD,CAAQ8B,IAAK4C,KADA,kBC9CfS,GAAW3E,KAAX2E,OA8GO7E,gBAnBS,SAAC,GAAe,IAAbrS,EAAY,EAAZA,MASzB,MAAO,CACL9D,aAFE8D,EANF9D,aASAI,QAHE0D,EALF1D,QASAG,eAJEuD,EAJFvD,eASAC,UALEsD,EAHFtD,UASAC,aANEqD,EAFFrD,aASAC,UAPEoD,EADFpD,aAYoC,CACtCua,mBVlHK,SAA4Bjb,GACjC,MAAO,CACL3E,KAAM+H,EACNpD,iBUgHF4T,sBAFauC,EA5GU,SAACnZ,GACxB,IACEgD,EASEhD,EATFgD,aACAQ,EAQExD,EARFwD,UACAJ,EAOEpD,EAPFoD,QACAG,EAMEvD,EANFuD,eACA0a,EAKEje,EALFie,mBACArH,EAIE5W,EAJF4W,kBACAkB,EAGE9X,EAHF8X,SACArU,EAEEzD,EAFFyD,aAGF,EAAwCwY,oBAAS,GAAjD,oBAAOiC,EAAP,KAAqBC,EAArB,KAEMC,EAAgB,WACpBD,GAAgB,IAWZ9D,EAAWjX,IAAYwW,KASvByE,EAPC9a,EAKEwU,GAAM4B,iBAAiBpW,GAJrBwU,GAAM4B,iBACM,SAAjBlW,EAA0B,SAAW,WAuB3C,OANA6a,qBAAU,WACHxG,GACHsG,OAKF,eAACJ,GAAD,CACE9d,UAAS,qBAAgBme,GACzBjG,MAAO,CAAEa,gBAAiB1V,GAF5B,SAIE,uBAAKrD,UAAS,6BAAwBma,EAAW,iBAAmB,IAApE,UACE,eAAC,GAAD,CAAMI,SAAU4D,IAChB,uBAAKne,UAAU,MAAMkY,MAAO,CAAEmB,MAAM,eAAD,OAvBnCc,GAAYvC,EACP,MAGD,GAAN,OADE9U,EACQuX,KAEAf,KAFV,MAmBqC,MAAnC,UACE,sBAAKtZ,UAAU,WAAf,SACE,qBAAIA,UAAU,6CAAd,SACGma,IAAavC,EAAW,KACvB,qBACE5X,UAAU,yCACV4Y,QAAS,WA/ClBhB,EAGHlB,GAAmBpT,GAFnBya,GAAoBjb,IA4CV,SAMGA,GAAgB8U,EACf,eAACyG,GAAA,EAAD,CAAoBre,UAAU,aAE9B,eAACse,GAAA,EAAD,CAAkBte,UAAU,mBAMtC,sBAAKA,UAAU,YAAf,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CAAW6b,OAAQmC,EAAclC,MAAOoC,e,UC7F9CK,GAAiB,CACpB,OAAS,eAAC,GAAD,CAAapX,GAAG,UAG1B4L,GAAiB6C,SAAQ,SAAC2B,EAAKzB,GAC9B,IAAM0I,EAAmB,SAACrW,GAAD,OAASoW,GAAepW,EAAI4J,MAAQ,eAAC,GAAD,CAAa5K,GAAIgB,EAAI6J,SAClFwM,EAAiBjH,GACbA,EAAInF,SACPmF,EAAInF,QAAQwD,SAAS,SAAA2B,GACpBiH,EAAiBjH,GACdA,EAAInF,SACNmF,EAAInF,QAAQwD,SAAS,SAAA2B,GACpBiH,EAAiBjH,YAOtB,IAAMkH,GAAkBC,cAAW,SAAA5e,GAClC,IACM6e,EADe7e,EAAb8e,SACsBC,SAAS3J,MAAM,KAAKjO,QAAO,SAAA6O,GAAC,OAAIA,KACxDgJ,EAAkBH,EAAa/R,KAAI,SAACmS,EAAGzH,GAC1C,IAAM0H,EAAG,WAAOL,EAAaM,MAAM,EAAG3H,EAAQ,GAAGvB,KAAK,MACtD,OACE,eAAC,KAAW4C,KAAZ,UACE,eAAC,KAAD,CAAME,GAAImG,EAAV,SAAgBT,GAAeS,MADXA,MAM1B,OACA,eAAC,KAAD,UACEF,OAaWI,GARf,gKACC,WACC,OACC,eAACT,GAAD,QAHH,GAAmC7M,aC1BpBuN,GAdW,SAAC,GAAwB,IAAtBnN,EAAqB,EAArBA,MAC5B,OADiD,EAAdoN,QAGjC,uBAAKpf,UAAU,kBAAf,UACC,qBAAIA,UAAU,iCAAd,SACC,eAAC,GAAD,CAAamH,GAAI6K,GAAe,WAEjC,eAAC,GAAD,OAGA,MCXW,SAASqN,KACvB,OACC,yBAAQrf,UAAU,SAAlB,SACC,iEAA6B,IAAI+M,MAAOuS,eAAxC,IAAyD,uBAAMtf,UAAU,uBAAhB,mBAA2C0C,OAApG,6BCDI,IAAM6c,GAAW,WACtB,OACE,eAAC,WAAD,CAAUC,SAAU,eAAC,GAAD,CAASxF,MAAM,YAAnC,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CACEjI,KAAI,UAAKpP,IAAL,SACJ8c,UAAWC,gBAAK,kBAAM,kEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,UACJ8c,UAAWC,gBAAK,kBAAM,wEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,oBACJ8c,UAAWC,gBAAK,kBAAM,uEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,oBACJ8c,UAAWC,gBAAK,kBAAM,uEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,SACJ8c,UAAWC,gBAAK,kBAAM,iEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,kCACJ8c,UAAWC,gBAAK,kBAAM,8EAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,wBACJ8c,UAAWC,gBAAK,kBAAM,8EAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,YACJ8c,UAAWC,gBAAK,kBAAM,wEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,oBACJ8c,UAAWC,gBAAK,kBAAM,wEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,gBACJ8c,UAAWC,gBAAK,kBAAM,iEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,aACJ8c,UAAWC,gBAAK,kBAAM,+EAExB,eAAC,KAAD,CACE3N,KAAI,UAAKpP,IAAL,uBACJ8c,UAAWC,gBAAK,kBAAM,+EAGxB,eAAC,KAAD,CAAUC,KAAI,UAAKhd,KAAmBkW,GAAE,UAAKlW,IAAL,iBAMjC+O,OAAMkO,KAAKL,I,UCrClBM,GAAY1G,KAAZ0G,QACAhJ,GAAkBC,KAAlBD,cAEKiJ,GAAY,SAAC,GAAoD,IAAlDhd,EAAiD,EAAjDA,aAAcI,EAAmC,EAAnCA,QAAS0b,EAA0B,EAA1BA,SAAUpb,EAAgB,EAAhBA,UACrDuc,EAAmBlI,GAAMlE,aAAaZ,GAAkB6L,EAASC,UAEjEjH,GADUC,GAAMC,cAAcjB,MACVkB,SAAS,MAC7BiI,EAAY9c,IAAYC,KACxBgX,EAAWjX,IAAYwW,KACvBuG,EAAkB,WACtB,OAAG9F,GAAYvC,EACN,EAEF9U,EAAeuX,KAA2Bf,MAKnD,GAAe,YAFI4G,8BAAX5X,OAGN,OAAO,eAAC,GAAD,CAAS0R,MAAM,SAaxB,OACE,gBAAC,KAAD,WACE,eAAC,GAAD,CAAWpC,SAAUA,IACnBuC,IAAavC,EAAY,eAAC,GAAD,CAAQH,UAAWsI,IAAsB,KACpE,gBAAC,KAAD,CAAQ/f,UAAU,gBAAlB,UACIggB,IAAcpI,EAAY,eAAC,GAAD,CAASH,UAAWsI,IAAsB,KACtE,gBAAC,KAAD,CAAQ/f,UAAU,aAAakY,MAfhC1U,IAAcC,KACR,CAAC0c,YAAaF,KAEpBzc,IAAc4c,KACR,CAACC,aAAcJ,KAEjB,CAACE,YAAaF,KASjB,UACE,uBAAKjgB,UAAS,sBAAiBma,EAAW,iBAAmB,IAA7D,UACE,eAAC,GAAD,CAAYiF,QAAO,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAkB5N,WAAYH,MAAK,OAAE+N,QAAF,IAAEA,OAAF,EAAEA,EAAkB/N,QAC5E,eAAC6N,GAAD,UACE,eAAC,GAAD,SAGJ,eAACR,GAAD,UAGHzH,GAAY,eAAC,GAAD,QAUJqB,gBALS,SAAC,GAAe,IAAbrS,EAAY,EAAZA,MAEzB,MAAO,CAAE9D,aADkC8D,EAAnC9D,aACeI,QADoB0D,EAArB1D,QACUD,OADW2D,EAAZ3D,UAIlBgW,CAAyBvH,IAAMkO,KAAKE,KC/CpCP,GAjCS,WACtB,OACE,eAAC,WAAD,CAAUC,SAAU,eAAC,GAAD,CAASxF,MAAM,SAAnC,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CACEjI,KAAI,UAAKnP,IAAL,UACJ6c,UAAWC,gBAAK,kBAAM,wEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKnP,IAAL,YACJ6c,UAAWC,gBAAK,kBAAM,wEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKnP,IAAL,eACJ6c,UAAWC,gBAAK,kBAAM,wEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKnP,IAAL,oBACJ6c,UAAWC,gBAAK,kBAAM,iEAExB,eAAC,KAAD,CACE3N,KAAI,UAAKnP,IAAL,YACJ6c,UAAWC,gBAAK,kBAAM,oCAExB,eAAC,KAAD,CACEC,KAAI,UAAK/c,KACTiW,GAAE,UAAKjW,IAAL,kBChBG0d,GAXW,WACzB,OACC,sBAAKtgB,UAAU,iBAAf,SACC,eAAC,KAAD,UACC,eAAC,KAAD,CAAO+R,KAAK,GAAG0N,UAAWc,U,oBCEfC,GAPA,CACbC,KAAMC,KACNzd,OAAQ,QACR0d,SAAS,eACJC,K,oBCGQC,GAPA,CACbJ,KAAMK,KACN7d,OAAQ,KACR0d,SAAS,eACJI,K,oBCGQC,GAPA,CACbP,KAAMQ,KACNhe,OAAQ,QACR0d,SAAS,eACJO,K,oBCKQC,GAPG,CACdC,GAAIC,GACJC,GAAIC,GACJC,GAAIC,GACJC,GCNW,CACbjB,KAAMkB,KACN1e,OAAQ,QACR0d,SAAS,eACJiB,M,mBCLDC,GAAe,SAAA7hB,GAAS,OAAI8hB,SAASC,KAAKC,UAAUC,IAAIjiB,IACxDkiB,GAAkB,SAAAliB,GAAS,OAAI8hB,SAASC,KAAKC,UAAUG,OAAOniB,ICQpE,SAASoiB,GAAT,GAAmE,IAAvCriB,EAAsC,EAAtCA,SAAUsiB,EAA4B,EAA5BA,gBAAoBC,EAAQ,+CAChE,OACE,eAAC,KAAD,2BACMA,GADN,IAEEC,OAAQ,gBAAG3D,EAAH,EAAGA,SAAH,OACNyD,EACEtiB,EAEA,eAAC,KAAD,CACE8Y,GAAI,CACFgG,SAAUjc,IACVoD,MAAO,CAAE2Z,KAAMf,UAStB,IAgCQF,gBAAWzF,aANF,SAAC,GAAqB,IAAnBrS,EAAkB,EAAlBA,MAAOb,EAAW,EAAXA,KAGhC,MAAO,CAAE9C,OAFsB2D,EAAvB3D,OAESO,UAFcoD,EAAfpD,UAEYoC,MADVG,EAAVH,SAIgBqT,EAhCL,SAACnZ,GACpB,ID3BmCE,EC2B3BiD,EAAuCnD,EAAvCmD,OAAQ2C,EAA+B9F,EAA/B8F,MAAOgZ,EAAwB9e,EAAxB8e,SAAUpb,EAAc1D,EAAd0D,UAC3Bgf,EAAmBrB,GAAUle,GAEnC,OD9BmCjD,EC6BtB,OAAD,OAAQwD,GD5BlB4a,qBACD,WAKC,OAHApe,aAAqByiB,MAAQziB,EAAU4M,IAAIiV,IAAgBA,GAAa7hB,GAGjE,WACLA,aAAqByiB,MAAQziB,EAAU4M,IAAIsV,IAAmBA,GAAgBliB,MAGjF,CAACA,ICoBA,eAAC,KAAD,CACEiD,OAAQuf,EAAiBvf,OACzB0d,SAAU6B,EAAiB7B,SAF7B,SAGE,eAAC,KAAD,CAAgB1d,OAAQuf,EAAiB/B,KAAMjd,UAAWA,EAA1D,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOkf,OAAK,EAAC3Q,KAAK,IAAlB,SACE,eAAC,KAAD,CAAU8G,GAAIlW,QAEhB,eAAC,KAAD,CAAOoP,KAAMnP,IAAb,SACE,eAAC,GAAD,CAAYY,UAAWA,MAEzB,eAAC4e,GAAD,CAAkBrQ,KAAMpP,IAAiB0f,gBAAiBzc,EAA1D,SACE,eAAC,GAAD,CAAWpC,UAAWA,EAAWob,SAAUA,iBCvCjD+D,GAAS,CACbC,KAAK,GAAD,OAAKC,GAAL,uBACJC,MAAM,GAAD,OAAKD,GAAL,yBAmBQE,OAhBf,WACE,OACE,sBAAK/iB,UAAU,MAAf,SACE,eAAC,IAAD,CAAU4Q,MAAOA,GAAjB,SACE,eAAC,yBAAD,CAAuBoS,SAAUL,GAAQM,aAAcpgB,IAAaU,aAAc2f,eAAe,yBAAjG,SACE,eAAC,KAAD,UACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAOnR,KAAK,IAAI0N,UAAW0D,gBCTrBC,QACW,cAA7BrS,OAAO6N,SAASyE,UAEe,UAA7BtS,OAAO6N,SAASyE,UAEhBtS,OAAO6N,SAASyE,SAASlQ,MACvB,2D,OCZNmQ,IAASf,OAAO,eAAC,GAAD,IAAST,SAASyB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,2EEvHJC,G,qBAZQ,CACrBC,OAAQ,GACRC,WAAY,GACZC,YACE,GACFC,UAAW,GACXC,cAAe,GACfC,kBAAmB,GACnBC,MAAO,GACPC,cAAe,K,OCHjBC,IAASC,cAAcC,GAGvB,IAAMC,EAAKH,IAASI,YACd5e,EAAOwe,IAASxe,OAChB6e,EAAaL,IAASM,UAEtBC,GADc/e,EAAKgf,YACE,IAAIR,IAASxe,KAAKif,oBACvCC,EAAuB,IAAIV,IAASxe,KAAKmf,qBCNzCla,GDOsB,IAAIuZ,IAASxe,KAAKof,oBACnB,IAAIZ,IAASxe,KAAKqf,mBAC3Bb,IAASc,YCTH,IAExBra,EAAgBC,mBAAhB,uCAAqC,WAAOJ,EAAOC,GAAd,SAAAwK,EAAA,sEAC7BvP,EACHuf,2BAA2Bza,EAAOC,GAClC6Y,MAAK,SAACzY,GAAD,OAAUA,KACfqa,OAAM,SAACC,GAAD,OAASA,KAJiB,mFAArC,wDAMAxa,EAAgBC,mBAAhB,uCAAqC,WAAOJ,EAAOC,GAAd,SAAAwK,EAAA,sEAC7BvP,EACHuf,2BAA2Bza,EAAOC,GAClC6Y,MAAK,SAACzY,GAAD,OAAUA,KACfqa,OAAM,SAACC,GAAD,OAASA,KAJiB,mFAArC,wDAMAxa,EAAgBQ,eAAhB,sBAAiC,sBAAA8J,EAAA,sEACzBvP,EACHuE,UACAqZ,MAAK,SAACzY,GAAD,OAAUA,KACfqa,OAAM,SAACC,GAAD,OAASA,KAJa,mFAMjCxa,EAAgBe,oBAAhB,sBAAsC,sBAAAuJ,EAAA,sEAC9BvP,EACH0f,gBAAgBX,GAChBnB,MAAK,SAACzY,GAAD,OAAUA,KACfqa,OAAM,SAACC,GAAD,OAASA,KAJkB,mFAMtCxa,EAAgBiB,sBAAhB,sBAAwC,sBAAAqJ,EAAA,sEAChCvP,EACH0f,gBAAgBR,GAChBtB,MAAK,SAACzY,GAAD,OAAUA,KACfqa,OAAM,SAACC,GAAD,OAASA,KAJoB,mFAMxCxa,EAAgBa,mBAAhB,uCAAqC,WAAOhB,EAAOC,GAAd,SAAAwK,EAAA,sEAC7BvP,EACH2f,+BAA+B7a,EAAOC,GACtC6Y,MAAK,SAACzY,GAAD,OAAUA,KACfqa,OAAM,SAACC,GAAD,OAASA,KAJiB,mFAArC,wDAMA,IAAMG,EAAkB,SAAC5T,GAAD,OAAUwS,IAASI,YAAYiB,WAAW7T,IAElE/G,EAAgB6a,cAAhB,uCAAgC,WAAOD,EAAYze,GAAnB,eAAAmO,EAAA,sEACPqQ,EAAgBC,GAAYE,IAAI3e,GAAI4e,MAD7B,WACxBjE,EADwB,QAEhBkE,OAFgB,yCAED,MAFC,6CAGrB7e,GAAI2a,EAAS3a,IAAO2a,EAASxjB,SAHR,2CAAhC,wDAMA0M,EAAgBuB,gBAAhB,uCAAkC,WAAOqZ,GAAP,qCAAAtQ,EAAA,6DAAmB2G,EAAnB,+BAA6B,GACvD3d,EAAO,GACT2nB,EAAYN,EAAgBC,GAE5B3J,EAAQ/N,SACU+N,EAAZ/N,QAEA0H,SAAQ,YAAqC,IAAlCnJ,EAAiC,EAAjCA,UAAW0B,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpB,QAAd3B,IACFA,EAAY8X,IAASI,UAAUuB,UAAUC,cAC3CF,EAAYA,EAAUG,MAAM3Z,EAAW0B,EAAUC,MAIjD6N,EAAQzP,OAAO,EACYyP,EAAQzP,KAA7BC,EADQ,EACRA,UAAWC,EADH,EACGA,MACnBuZ,EAAYA,EAAUI,QAAQ5Z,EAAWC,IAhBX,SAmBzBuZ,EAAUF,MAnBe,qBAmBRnQ,SAAQ,SAACkQ,GAC/BxnB,EAAKmY,KAAL,aAAYtP,GAAI2e,EAAI3e,IAAO2e,EAAIxnB,YApBD,kBAuBzBA,GAvByB,2CAAlC,sDA0BA0M,EAAgBgF,YAAhB,uCAA8B,WAAOC,EAAUC,GAAjB,eAAAoF,EAAA,6DAC5BvN,QAAQC,IAAI,cAAgBiI,GADA,SAEZ2U,EAAWrI,IAAI,WAAW+J,MAAMrW,GAAU9E,IAAI+E,GAFlC,cAExB8O,EAFwB,yBAGrBA,EAAIzC,IAAIgK,kBAHa,2CAA9B,wDAMAvb,EAAgBwb,kBAAhB,uCAAoC,WAAOC,EAAcC,EAAqBC,GAA1C,SAAArR,EAAA,+EAE1BoP,EAAGkB,WAAW,kBAAkB3D,IAAI,CACxCwE,eACAC,sBACAC,YAL8B,yHAApC,0DAYA3b,EAAgB4b,qBAAhB,uCAAuC,WAAOC,GAAP,SAAAvR,EAAA,+EAE7BoP,EAAGkB,WAAW,kBAAkBE,IAAIe,GAAY9f,SAFnB,yHAAvC,sDAQAiE,EAAgB8b,mBAAhB,uCAAqC,WAAO3f,EAAIsf,EAAaC,EAAqBC,GAA7C,SAAArR,EAAA,kEAElB,MAAXqR,EAF6B,gCAGzBjC,EAAGkB,WAAW,kBAAkBE,IAAI3e,GAAI4f,OAAO,CACnDN,eACAC,wBAL6B,6CAQzBhC,EAAGkB,WAAW,kBAAkBE,IAAI3e,GAAI6f,IAAI,CAChDP,eACAC,sBACAC,YAX6B,8HAArC,4DAmBA3b,EAAgBuD,qBAAhB,uCAAuC,WAAO0Y,GAAP,eAAA3R,EAAA,+EAEdoP,EAClBkB,WAAW,kBACXQ,MAAM,WAAY,KAAMa,GACxBlB,MALgC,cAE/BmB,EAF+B,gBAM7BA,EAASC,KAAKC,GAAG,GAAG7K,IAAIxV,SANK,6DAQnCgB,QAAQC,IACN,qGADF,MARmC,8DAAvC,sDAiBAgD,EAAgBsC,kBAAhB,uCAAoC,WAAO3F,GAAP,SAAA2N,EAAA,+EAE1BoP,EAAGkB,WAAW,kBAAkB3D,IAAI,CAAEta,aAFZ,yHAApC,sDAQAqD,EAAgB4D,oBAAhB,uCAAsC,WAAOjH,GAAP,eAAA2N,EAAA,sEAE9B+R,EAAa9C,IAASc,YAAYiC,cAAc,gBAFlB,SAG5BD,EAAW,CAAE1f,SAAUA,IAHK,OAIlCI,QAAQC,IAAI,iBAJsB,sDAMlCD,QAAQC,IACN,mGADF,MANkC,8DAAtC,sDAaAgD,EAAgBsB,WAAhB,uCAA6B,WAAOpO,GAAP,eAAAoX,EAAA,sEAErB+R,EAAa9C,IAASc,YAAYiC,cAAc,cAF3B,SAGnBD,EAAW,CAAEnpB,OAAQA,IAHF,OAIzB6J,QAAQC,IAAI,eAJa,sDAMzBD,QAAQC,IACN,mGADF,MANyB,8DAA7B,sDAcAgD,EAAgBqE,gBAAhB,uCAAkC,WAAOkY,GAAP,eAAAjS,EAAA,sEACfoP,EACdkB,WAAW2B,GACXxB,MACApC,MAAK,SAAC6D,GACL,OAAOA,EAAKjK,QALgB,cAC5BA,EAD4B,yBAOzBA,GAPyB,2CAAlC,sDAUAvS,EAAgB2E,cAAhB,uCAAgC,WAAOrR,GAAP,SAAAgX,EAAA,sEACxBoP,EACHkB,WAAW,YACXE,IAAI,mBACJkB,IAAI,CAAES,WAAYnpB,EAAKA,KAAKmpB,WAAYC,IAAKppB,EAAKA,KAAKopB,MAJ5B,2CAAhC,sDAOA1c,EAAgBuE,sBAAhB,sBAAwC,4BAAA+F,EAAA,+EAEfoP,EAAGkB,WAAW,YAAYE,IAAI,mBAAmBC,MAFlC,WAEhCmB,EAFgC,QAGtBlB,OAHsB,yCAGP,IAHO,gCAI7BkB,EAAS5oB,QAJoB,sCAMpCyJ,QAAQC,IACN,sGADF,MANoC,8DAaxCgD,EAAgByE,iBAAhB,sBAAmC,8BAAA6F,EAAA,sEAE3BhX,EAAO,GAFoB,SAGVomB,EAClBkB,WAAW,YACXE,IAAI,iBACJF,WAAW,aACXG,MAP4B,cAG3BmB,EAH2B,OAQ/Bnf,QAAQC,IACN,oGACAkf,EAASC,MAEXD,EAASC,KAAKvR,SAAQ,SAACkQ,GACrBxnB,EAAKmY,KAAL,aAAYtP,GAAI2e,EAAI3e,IAAO2e,EAAIxnB,YAbF,kBAexBA,GAfwB,wCAiB/ByJ,QAAQC,IACN,iGADF,MAjB+B,+DAwBnCgD,EAAgBsF,oBAAhB,uCAAsC,WAAOhS,GAAP,SAAAgX,EAAA,6DACpCvN,QAAQC,IACN,mGACA1J,GAHkC,kBAM5BomB,EACHkB,WAAW,YACXE,IAAI,iBACJF,WAAW,aACXE,IAAIxnB,EAAKA,KAAKkL,SACdzC,SAX+B,OAarB6d,EAAW+C,WAAWrpB,EAAKA,KAAK8R,UACtCrJ,SAd2B,oHAAtC,sDAmBAiE,EAAgBqF,sBAAhB,uCAAwC,WAAO/R,GAAP,SAAAgX,EAAA,+EAE9BoP,EACHkB,WAAW,YACXE,IAAI,iBACJF,WAAW,aACX3D,IAAI,CACH7R,SAAU9R,EAAK8R,SACfH,SAAU3R,EAAK2R,SACfhD,UAAWsX,IAASI,UAAUiD,UAAUC,SAAS,IAAI9a,QATrB,4DAYpChF,QAAQC,IACN,sGADF,MAZoC,6DAAxC,sDAoBAgD,EAAgBkE,8BAAhB,uCAAgD,WAAO4Y,GAAP,eAAAxS,EAAA,+EAEtCoP,EACHkB,WAAW,mBACXE,IAAIgC,EAAO3gB,IACX4f,OAAO,CAAEze,OAAQ,aALwB,uBAOZoc,EAC7BkB,WAAW,eACXQ,MAAM,oBAAqB,KAAM0B,EAAO3gB,IACxC4e,MAVyC,YAOxCgC,EAPwC,QAWpBC,MAXoB,iDAY5CD,EAAoBZ,KAAK,GAAG5K,IAAIwK,OAAO,CAAEze,OAAQ,YAZL,wDAc5CP,QAAQC,IACN,6GADF,MAd4C,+DAAhD,sDAsBAgD,EAAgBwC,uBAAhB,uCAAyC,WAAOsa,EAAQxf,GAAf,SAAAgN,EAAA,+EAE/BoP,EACHkB,WAAW,WACXE,IAAIgC,GACJf,OAAO,CAAE1e,cAAeC,IALU,4DAOrCP,QAAQC,IACN,uGADF,MAPqC,6DAAzC,wDAgBegD,O,gCCpTf,gRAAO,IACMsO,EAAiB,IACjBe,EAA2B,GAC3BrX,EAAiB,iBACjBoW,EAAgB,gBAChBjW,EAAgB,OAChBuW,EAAe,MACfjW,EAAU,MACV2c,EAAU,O,gCCRvB,scAgBa6H,EAAS,SAAC/c,GACrB,MAAO,CACL/M,KAAMsG,IACNmG,QAASM,IAIAK,EAAgB,SAAC3F,GAC5B,MAAO,CACLzH,KAAMuG,IACNkB,UAIS0E,EAAU,WACrB,MAAO,CACLnM,KAAMwG,MAIGiH,EAAiB,WAC5B,MAAO,CACLzN,KAAMyG,MAIGsjB,EAAS,SAAChd,GACrB,MAAO,CACL/M,KAAM0G,IACN+F,QAASM,IAIAY,EAAgB,SAAClG,GAC5B,MAAO,CACLzH,KAAM2G,IACNc,UAISuiB,EAAmB,WAC9B,MAAO,CACLhqB,KAAMgH,MAIG6G,EAAgC,SAACpG,GAC5C,MAAO,CACLzH,KAAMiH,IACNQ,UAIS6E,EAAqB,WAChC,MAAO,CACLtM,KAAMkH,MAIG6G,EAAkC,SAACtG,GAC9C,MAAO,CACLzH,KAAMmH,IACNM,UAISwF,EAAkB,SAAC3F,GAC9B,MAAO,CACLtH,KAAM4G,IACNU,YAIS2iB,EAAkB,WAC7B,MAAO,CACLjqB,KAAM6G,MAIGqjB,EAAc,WACzB,MAAO,CACLlqB,KAAM8G,O,gCCjGV,4MAAO,IAAM7G,EAAwB,wBACxBG,EAA2B,2BAC3BG,EAAwB,wBAExBE,EAAmB,mBACnBE,EAAsB,sBACtBE,EAAoB,qB,gCCNjC,4MAAO,IAAME,EAA4B,4BAC5BE,EAA+B,+BAC/BE,EAA6B,6BAE7BE,EAAwC,wCACxCE,EAA2C,2CAC3CE,EAAyC,0C,gCCNtD,4iBAqBa0oB,EAAkB,iBAAO,CACpCnqB,KAAMqD,MAGKmM,EAAqB,SAACrP,GAAD,MAAW,CAC3CH,KAAMsD,IACNnD,SAGWsP,EAAkB,SAAC4X,GAAD,MAAU,CACvCrnB,KAAMuD,IACN8jB,QAGW+C,EAA0B,iBAAO,CAC5CpqB,KAAMwD,MAQK2M,EAA6B,SAACjH,GAAD,MAAqB,CAC7DlJ,KAAMyD,IACNyF,mBAGWmhB,EAAqB,SAAC7gB,GAAD,MAAe,CAC/CxJ,KAAMoE,IACNoF,aAGW6G,EAAwB,SAAC7G,GAAD,MAAe,CAClDxJ,KAAMqE,IACNmF,aAGW8G,EAAsB,SAAChQ,GAAD,MAAY,CAC7CN,KAAMsE,IACNhE,UAGWgqB,EAAwB,SAAC9gB,GAAD,MAAe,CAClDxJ,KAAMiE,IACNuF,aAGW+G,EAA2B,SAAC/G,GAAD,MAAe,CACrDxJ,KAAMkE,IACNsF,aAGWgH,EAAyB,SAAClQ,GAAD,MAAY,CAChDN,KAAMmE,IACN7D,UAGWiqB,EAAmB,SAAC/gB,GAAD,MAAe,CAC7CxJ,KAAM8D,IACN0F,SAAUA,IAGCkH,EAAsB,SAAClH,GAAD,MAAe,CAChDxJ,KAAM+D,IACNyF,aAQWghB,EAA6B,SAAChhB,EAAUW,GAAX,MAAuB,CAC/DnK,KAAM2D,IACN6F,WACAW,WAGWwG,EAAgC,SAACnH,EAAUW,GAAX,MAAuB,CAClEnK,KAAM4D,IACN4F,WACAW,WAGWyG,EAA8B,SAACtQ,GAAD,MAAY,CACrDN,KAAM6D,IACNvD,W,gCC5GF,sGACO,IAAM8B,EAA6B,6BAC7BE,EAAgC,gCAChCE,EAA6B,8B,gCCH1C,sGAAO,IAAME,EAAuB,uBACvBE,EAA0B,0BAC1BE,EAAwB,yB,gCCFrC,sGAAO,IAAME,EAAsB,sBACtBE,EAAyB,yBACzBE,EAAuB,wB,gCCFpC,weAkBaqnB,EAA8B,SAACtqB,GAAD,MAAW,CACpDH,KAAMuF,IACNpF,SAGWsR,EAAiC,SAACtR,GAAD,MAAW,CACvDH,KAAMwF,IACNrF,SAGWuR,EAA+B,SAACpR,GAAD,MAAY,CACtDN,KAAMyF,IACNnF,UAEWoqB,EAA4B,iBAAO,CAC9C1qB,KAAMmG,MAGKwL,EAA+B,SAACxR,GAAD,MAAW,CACrDH,KAAMoG,IACNjG,SAGWyR,EAA6B,SAACtR,GAAD,MAAY,CACpDN,KAAMqG,IACN/F,UAGWqqB,EAAwB,SAACxqB,GAAD,MAAW,CAC9CH,KAAMgG,IACN7F,SAGW2K,EAA2B,iBAAO,CAC7C9K,KAAMiG,MAGK4E,EAAyB,SAACvK,GAAD,MAAY,CAChDN,KAAMkG,IACN5F,UAEWsqB,EAAuB,iBAAO,CACzC5qB,KAAM6F,MAGK8E,EAA0B,SAACxK,GAAD,MAAW,CAChDH,KAAM8F,IACN3F,SAQW0qB,EAA0B,SAAC1qB,GAAD,MAAW,CAChDH,KAAM0F,IACNvF,SAGW4K,EAA6B,SAAC5K,GAAD,MAAW,CACnDH,KAAM2F,IACNxF,SAGW6K,EAA2B,SAAC1K,GAAD,MAAY,CAClDN,KAAM4F,IACNtF,Y","file":"static/js/main.46001a64.chunk.js","sourcesContent":["import {\r\n  DELETE_USER_INIT,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_ERROR,\r\n} from \"../constants/Users\";\r\n\r\n// import { firebase } from \"..auth/FirebaseAuth.js\";\r\n\r\n// import FirebaseService from \"services/FirebaseService\";\r\n\r\n// import { notification } from \"antd\";\r\n\r\nimport {\r\n  USERS_FETCH_DATA_INIT,\r\n  USERS_FETCH_DATA_SUCCESS,\r\n  USERS_FETCH_DATA_FAIL,\r\n} from \"../constants/Users\";\r\n\r\nexport const fetchUsersInit = (userId = \"\") => {\r\n  return { type: USERS_FETCH_DATA_INIT, userId };\r\n};\r\n\r\nexport const fetchUsersSuccess = (data) => {\r\n  return { type: USERS_FETCH_DATA_SUCCESS, data };\r\n};\r\n\r\nexport const fetchUsersFail = (error) => {\r\n  return { type: USERS_FETCH_DATA_FAIL, error };\r\n};\r\n\r\nexport const deleteUserInit = (userId) => ({\r\n  type: DELETE_USER_INIT,\r\n  userId: userId,\r\n});\r\n\r\nexport const deleteUserSuccess = (userId) => ({\r\n  type: DELETE_USER_SUCCESS,\r\n  userId,\r\n});\r\n\r\nexport const deleteUserError = (error) => ({\r\n  type: DELETE_USER_ERROR,\r\n  error,\r\n});\r\n","import {\r\n  SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT,\r\n  SET_WIHTHDRAWAL_REQUEST_COMPLETE_SUCCESS,\r\n  SET_WIHTHDRAWAL_REQUEST_COMPLETE_ERROR,\r\n  GET_WITHDRAW_REQUEST_INIT,\r\n  GET_WITHDRAW_REQUEST_SUCCESS,\r\n  GET_WITHDRAW_REQUEST_ERROR,\r\n} from \"../constants/WithdrawRequestConstants.js\";\r\n\r\nexport const getWithdrawRequestInit = () => ({\r\n  type: GET_WITHDRAW_REQUEST_INIT,\r\n});\r\n\r\nexport const getWithdrawRequestSuccess = (data) => ({\r\n  type: GET_WITHDRAW_REQUEST_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const getWithdrawRequestError = (error) => ({\r\n  type: GET_WITHDRAW_REQUEST_ERROR,\r\n  error,\r\n});\r\n\r\nexport const setWihthdrawalRequestCompleteInit = (data) => ({\r\n  type: SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT,\r\n  data,\r\n});\r\n\r\nexport const setWihthdrawalRequestCompleteSuccess = (data) => ({\r\n  type: SET_WIHTHDRAWAL_REQUEST_COMPLETE_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const setWihthdrawalRequestCompleteError = (error) => ({\r\n  type: SET_WIHTHDRAWAL_REQUEST_COMPLETE_ERROR,\r\n  error,\r\n});\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import {\r\n  DOCTOR_CATEGORY_FETCH_INIT,\r\n  DOCTOR_CATEGORY_FETCH_SUCCESS,\r\n  DOCTOR_CATEGORY_FETCH_FAIL,\r\n} from \"redux/constants/DoctorCategory\";\r\nexport const fetchDoctorCategoryInit = (userId = \"\") => {\r\n  return { type: DOCTOR_CATEGORY_FETCH_INIT, userId };\r\n};\r\nexport const fetchDoctorCategorySuccess = (data) => ({\r\n  type: DOCTOR_CATEGORY_FETCH_SUCCESS,\r\n  data,\r\n});\r\nexport const fetchDoctorCategoryFail = (error) => ({\r\n  type: DOCTOR_CATEGORY_FETCH_FAIL,\r\n  error,\r\n});\r\n","import {\r\n    GET_TRANSACTION_INIT,\r\n    GET_TRANSACTION_SUCCESS,\r\n    GET_TRANSACTION_ERROR\r\n} from '../constants/TransactionConstants.js';\r\n\r\nexport const getTransactionInit = () => ({\r\n    type: GET_TRANSACTION_INIT,\r\n});\r\n\r\nexport const getTransactionSuccess = (data) => ({\r\n    type: GET_TRANSACTION_SUCCESS,\r\n    data\r\n});\r\n\r\nexport const getTransactionError = (error) => ({\r\n    type: GET_TRANSACTION_ERROR,\r\n    error\r\n});","import {\r\n    GET_USER_COUNT_INIT,\r\n    GET_USER_COUNT_SUCCESS,\r\n    GET_USER_COUNT_ERROR\r\n} from '../constants/DashboardConstants.js';\r\n\r\nexport const getUserCountInit = () => ({\r\n    type: GET_USER_COUNT_INIT,\r\n});\r\n\r\nexport const getUserCountSuccess = (data) => ({\r\n    type: GET_USER_COUNT_SUCCESS,\r\n    data\r\n});\r\n\r\nexport const getUserCountError = (error) => ({\r\n    type: GET_USER_COUNT_ERROR,\r\n    error\r\n});","export const DOCTOR_FETCH_INIT = \"DOCTOR_FETCH_INIT\";\r\nexport const DOCTOR_FETCH_SUCCESS = \"DOCTOR_FETCH_SUCCESS\";\r\nexport const DOCTOR_FETCH_FAIL = \"DOCTOR_FETCH_FAIL\";\r\nexport const FETCH_TOP_RATED_DOCTOR_INIT = \"FETCH_TOP_RATED_DOCTOR_INIT\";\r\nexport const FETCH_TOP_RATED_DOCTOR_SUCCESS = \"FETCH_TOP_RATED_DOCTOR_SUCCESS\";\r\nexport const FETCH_TOP_RATED_DOCTOR_FAIL = \"FETCH_TOP_RATED_DOCTOR_FAIL\";\r\n//plopImport\r\nexport const SET_DOCTOR_ACCOUNT_STATUS_INIT = \"SET_DOCTOR_ACCOUNT_STATUS_INIT\";\r\nexport const SET_DOCTOR_ACCOUNT_STATUS_SUCCESS = \"SET_DOCTOR_ACCOUNT_STATUS_SUCCESS\";\r\nexport const SET_DOCTOR_ACCOUNT_STATUS_ERROR = \"SET_DOCTOR_ACCOUNT_STATUS_ERROR\";\r\nexport const DELETE_DOCTOR_INIT = \"DELETE_DOCTOR_INIT\";\r\nexport const DELETE_DOCTOR_SUCCESS = \"DELETE_DOCTOR_SUCCESS\";\r\nexport const DELETE_DOCTOR_ERROR = \"DELETE_DOCTOR_ERROR\";\r\nexport const ADD_TOP_RATED_DOCTOR_INIT = \"ADD_TOP_RATED_DOCTOR_INIT\";\r\nexport const ADD_TOP_RATED_DOCTOR_SUCCESS = \"ADD_TOP_RATED_DOCTOR_SUCCESS\";\r\nexport const ADD_TOP_RATED_DOCTOR_ERROR = \"ADD_TOP_RATED_DOCTOR_ERROR\";\r\nexport const DELETE_TOP_RATED_INIT = \"DELETE_TOP_RATED_INIT\";\r\nexport const DELETE_TOP_RATED_SUCCESS = \"DELETE_TOP_RATED_SUCCESS\";\r\nexport const DELETE_TOP_RATED_ERROR = \"DELETE_TOP_RATED_ERROR\";\r\n","import {\r\n  SIDE_NAV_LIGHT,\r\n  NAV_TYPE_SIDE,\r\n  DIR_LTR,\r\n} from \"constants/ThemeConstant\";\r\nimport { env } from \"./EnvironmentConfig\";\r\n\r\nexport const APP_NAME = \"Hallo Doctor Dashboard\";\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL;\r\nexport const APP_PREFIX_PATH = \"/app\";\r\nexport const AUTH_PREFIX_PATH = \"/auth\";\r\n\r\nexport const THEME_CONFIG = {\r\n  navCollapsed: false,\r\n  sideNavTheme: SIDE_NAV_LIGHT,\r\n  locale: \"en\",\r\n  navType: NAV_TYPE_SIDE,\r\n  topNavColor: \"#3e82f7\",\r\n  headerNavColor: \"\",\r\n  mobileNav: false,\r\n  currentTheme: \"light\",\r\n  direction: DIR_LTR,\r\n};\r\n","export const SET_WITHDRAWAL_PERCENTAGE_INIT = \"SET_WITHDRAWAL_PERCENTAGE_INIT\";\r\nexport const SET_WITHDRAWAL_PERCENTAGE_SUCCESS = \"SET_WITHDRAWAL_PERCENTAGE_SUCCESS\";\r\nexport const SET_WITHDRAWAL_PERCENTAGE_ERROR = \"SET_WITHDRAWAL_PERCENTAGE_ERROR\";\r\n//plopImport\r\nexport const DELETE_IMAGE_CAROUSEL_INIT = \"DELETE_IMAGE_CAROUSEL_INIT\";\r\nexport const DELETE_IMAGE_CAROUSEL_SUCCESS = \"DELETE_IMAGE_CAROUSEL_SUCCESS\";\r\nexport const DELETE_IMAGE_CAROUSEL_ERROR = \"DELETE_IMAGE_CAROUSEL_ERROR\";\r\nexport const GET_IMAGE_CAROUSEL_INIT = \"GET_IMAGE_CAROUSEL_INIT\";\r\nexport const GET_IMAGE_CAROUSEL_SUCCESS = \"GET_IMAGE_CAROUSEL_SUCCESS\";\r\nexport const GET_IMAGE_CAROUSEL_ERROR = \"GET_IMAGE_CAROUSEL_ERROR\";\r\nexport const SAVE_IMAGE_CAROUSEL_INIT = \"SAVE_IMAGE_CAROUSEL_INIT\";\r\nexport const SAVE_IMAGE_CAROUSEL_SUCCESS = \"SAVE_IMAGE_CAROUSEL_SUCCESS\";\r\nexport const SAVE_IMAGE_CAROUSEL_ERROR = \"SAVE_IMAGE_CAROUSEL_ERROR\";\r\nexport const GET_WITHDRAWAL_SETTINGS_INIT = \"GET_WITHDRAWAL_SETTINGS_INIT\";\r\nexport const GET_WITHDRAWAL_SETTINGS_SUCCESS = \"GET_WITHDRAWAL_SETTINGS_SUCCESS\";\r\nexport const GET_WITHDRAWAL_SETTINGS_ERROR = \"GET_WITHDRAWAL_SETTINGS_ERROR\";","export const SIGNIN = \"SIGNIN\";\r\nexport const AUTHENTICATED = \"AUTHENTICATED\";\r\nexport const SIGNOUT = \"SIGNOUT\";\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNUP = \"SIGNUP\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SHOW_AUTH_MESSAGE = \"SHOW_AUTH_MESSAGE\";\r\nexport const HIDE_AUTH_MESSAGE = \"HIDE_AUTH_MESSAGE\";\r\nexport const SHOW_LOADING = \"SHOW_LOADING\";\r\nexport const AUTH_TOKEN = \"auth_token\";\r\nexport const SIGNIN_WITH_GOOGLE = \"SIGNIN_WITH_GOOGLE\";\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED =\r\n  \"SIGNIN_WITH_GOOGLE_AUTHENTICATED\";\r\nexport const SIGNIN_WITH_FACEBOOK = \"SIGNIN_WITH_FACEBOOK\";\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED =\r\n  \"SIGNIN_WITH_FACEBOOK_AUTHENTICATED\";\r\n//plopImport\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n    case AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        redirect: \"/\",\r\n        token: action.token,\r\n      };\r\n    case SHOW_AUTH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: action.message,\r\n        showMessage: true,\r\n        loading: false,\r\n      };\r\n    case HIDE_AUTH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: \"\",\r\n        showMessage: false,\r\n      };\r\n    case SIGNOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        redirect: \"/\",\r\n        loading: false,\r\n      };\r\n    }\r\n    case SIGNUP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.token,\r\n      };\r\n    }\r\n    case SHOW_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.token,\r\n      };\r\n    }\r\n    case SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.token,\r\n      };\r\n    }\r\n    //plopImport\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {\r\n  DELETE_USER_INIT,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_ERROR,\r\n  USERS_FETCH_DATA_INIT,\r\n  USERS_FETCH_DATA_FAIL,\r\n  USERS_FETCH_DATA_SUCCESS,\r\n} from \"../constants/Users\";\r\n\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n  delete: false,\r\n};\r\n\r\nconst users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERS_FETCH_DATA_INIT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case USERS_FETCH_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        loading: false,\r\n      };\r\n    case USERS_FETCH_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    case DELETE_USER_INIT:\r\n      return { ...state, loading: true };\r\n    case DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        data: state.data.filter((elem) => elem.id !== action.userId),\r\n        loading: false,\r\n      };\r\n    case DELETE_USER_ERROR:\r\n      return { ...state, error: action.error, loading: false };\r\n    //plopImport\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default users;\r\n","import {\r\n  DOCTOR_CATEGORY_FETCH_FAIL,\r\n  DOCTOR_CATEGORY_FETCH_INIT,\r\n  DOCTOR_CATEGORY_FETCH_SUCCESS,\r\n} from \"redux/constants/DoctorCategory\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n  delete: false,\r\n};\r\n\r\nconst doctorCategory = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DOCTOR_CATEGORY_FETCH_INIT:\r\n      return { ...state, loading: true };\r\n    case DOCTOR_CATEGORY_FETCH_SUCCESS:\r\n      return { ...state, success: true, data: action.data, loading: false };\r\n    case DOCTOR_CATEGORY_FETCH_FAIL:\r\n      return { ...state, error: action.error, loading: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default doctorCategory;\r\n","import {\r\n  SET_DOCTOR_ACCOUNT_STATUS_INIT,\r\n  SET_DOCTOR_ACCOUNT_STATUS_SUCCESS,\r\n  SET_DOCTOR_ACCOUNT_STATUS_ERROR,\r\n  DELETE_DOCTOR_INIT,\r\n  DELETE_DOCTOR_SUCCESS,\r\n  DELETE_DOCTOR_ERROR,\r\n  ADD_TOP_RATED_DOCTOR_INIT,\r\n  ADD_TOP_RATED_DOCTOR_SUCCESS,\r\n  ADD_TOP_RATED_DOCTOR_ERROR,\r\n  DELETE_TOP_RATED_INIT,\r\n  DELETE_TOP_RATED_SUCCESS,\r\n  DELETE_TOP_RATED_ERROR,\r\n  DOCTOR_FETCH_INIT,\r\n  DOCTOR_FETCH_SUCCESS,\r\n  DOCTOR_FETCH_FAIL,\r\n  FETCH_TOP_RATED_DOCTOR_INIT,\r\n  FETCH_TOP_RATED_DOCTOR_SUCCESS,\r\n  FETCH_TOP_RATED_DOCTOR_FAIL,\r\n} from \"redux/constants/Doctor\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  topRatedDoctor: [],\r\n  loading: false,\r\n  topRatedLoading: false,\r\n  error: null,\r\n  success: false,\r\n  delete: false,\r\n  topRatedSuccess: false,\r\n  topRatedDelete: false,\r\n  topRatedError: false,\r\n};\r\n\r\nconst doctors = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DOCTOR_FETCH_INIT:\r\n      return { ...state, loading: true };\r\n    case DOCTOR_FETCH_SUCCESS:\r\n      return { ...state, success: true, data: action.data, loading: false };\r\n    case DOCTOR_FETCH_FAIL:\r\n      return { ...state, error: action.error };\r\n    case FETCH_TOP_RATED_DOCTOR_INIT:\r\n      return { ...state, topRatedLoading: true };\r\n    case FETCH_TOP_RATED_DOCTOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        topRatedSuccess: true,\r\n        topRatedDoctor: action.topRatedDoctor,\r\n        topRatedLoading: false,\r\n      };\r\n    case FETCH_TOP_RATED_DOCTOR_FAIL:\r\n      return {\r\n        ...state,\r\n        topRatedError: action.topRatedError,\r\n        topRatedLoading: false,\r\n      };\r\n    case DELETE_TOP_RATED_INIT:\r\n      return { ...state, topRatedLoading: true };\r\n    case DELETE_TOP_RATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        topRatedDoctor: state.topRatedDoctor.filter(\r\n          (elem) => elem.id !== action.doctorId\r\n        ),\r\n        topRatedLoading: false,\r\n      };\r\n    case DELETE_TOP_RATED_ERROR:\r\n      return { ...state, topRatedError: action.error };\r\n    case ADD_TOP_RATED_DOCTOR_INIT:\r\n      return { ...state, loading: true };\r\n    case ADD_TOP_RATED_DOCTOR_SUCCESS:\r\n      let doctorAdded = state.data.find(\r\n        (object) => object.id === action.doctorId\r\n      );\r\n      console.log(\r\n        \"🚀 ~ file: Doctor.js ~ line 76 ~ doctors ~ doctorAdded\",\r\n        doctorAdded\r\n      );\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        topRatedDoctor: [...state.topRatedDoctor, doctorAdded],\r\n        loading: false,\r\n      };\r\n    case ADD_TOP_RATED_DOCTOR_ERROR:\r\n      return { ...state, error: action.error };\r\n    case DELETE_DOCTOR_INIT:\r\n      return { ...state, loading: true };\r\n    case DELETE_DOCTOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        data: state.data.filter((elem) => elem.id !== action.doctorId),\r\n        loading: false,\r\n      };\r\n    case DELETE_DOCTOR_ERROR:\r\n      return { ...state, error: action.error, loading: false };\r\n    case SET_DOCTOR_ACCOUNT_STATUS_INIT:\r\n      return { ...state, loading: true };\r\n    case SET_DOCTOR_ACCOUNT_STATUS_SUCCESS:\r\n      console.log(\"kepanggil kok\");\r\n      console.log(\r\n        \"🚀 ~ file: Doctor.js ~ line 106 ~ doctors ~ action.docot\",\r\n        action.doctorId\r\n      );\r\n      let objIndex = state.data.findIndex((obj) => obj.id === action.doctorId);\r\n      let newArray = state.data;\r\n      newArray[objIndex].accountStatus = action.status;\r\n      // console.log(\r\n      //   \"🚀 ~ file: Doctor.js ~ line 106 ~ doctors ~ newArray[objIndex].accountStatus\",\r\n      //   newArray[objIndex].accountStatus\r\n      // );\r\n\r\n      return { ...state, success: true, data: newArray, loading: false };\r\n    case SET_DOCTOR_ACCOUNT_STATUS_ERROR:\r\n      return { ...state, error: action.error, loading: false };\r\n    //plopImport\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default doctors;\r\n","import {\r\n  SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT,\r\n  SET_WIHTHDRAWAL_REQUEST_COMPLETE_SUCCESS,\r\n  SET_WIHTHDRAWAL_REQUEST_COMPLETE_ERROR,\r\n  GET_WITHDRAW_REQUEST_INIT,\r\n  GET_WITHDRAW_REQUEST_SUCCESS,\r\n  GET_WITHDRAW_REQUEST_ERROR,\r\n} from \"../constants/WithdrawRequestConstants.js\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n  delete: false,\r\n};\r\n\r\nconst withdrawRequest = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_WITHDRAW_REQUEST_INIT:\r\n      return { ...state, loading: true };\r\n    case GET_WITHDRAW_REQUEST_SUCCESS:\r\n      return { ...state, success: true, data: action.data, loading: false };\r\n    case GET_WITHDRAW_REQUEST_ERROR:\r\n      return { ...state, error: action.error, loading: false };\r\n    case SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT:\r\n      return { ...state, loading: true };\r\n    case SET_WIHTHDRAWAL_REQUEST_COMPLETE_SUCCESS:\r\n      let objIndex = state.data.findIndex((obj) => obj.id === action.data.id);\r\n      let newArray = state.data;\r\n      newArray[objIndex].status = \"complete\";\r\n      return { ...state, success: true, data: newArray, loading: false };\r\n    case SET_WIHTHDRAWAL_REQUEST_COMPLETE_ERROR:\r\n      return { ...state, error: action.error, loading: false };\r\n    //plopImport\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default withdrawRequest;\r\n","import {\r\n  GET_TRANSACTION_INIT,\r\n  GET_TRANSACTION_SUCCESS,\r\n  GET_TRANSACTION_ERROR,\r\n} from \"../constants/TransactionConstants.js\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n  delete: false,\r\n};\r\n\r\nconst transaction = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TRANSACTION_INIT:\r\n      return { ...state, loading: true };\r\n    case GET_TRANSACTION_SUCCESS:\r\n      return { ...state, success: true, data: action.data, loading: false };\r\n    case GET_TRANSACTION_ERROR:\r\n      return { ...state, error: action.error, loading: false };\r\n    //plopImport\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default transaction;\r\n","import {\r\n    GET_USER_COUNT_INIT,\r\n    GET_USER_COUNT_SUCCESS,\r\n    GET_USER_COUNT_ERROR\r\n} from \"../constants/DashboardConstants.js\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n  delete: false,\r\n};\r\n\r\nconst dashboard = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_COUNT_INIT:\r\n            return { ...state, loading: true };\r\n        case GET_USER_COUNT_SUCCESS:\r\n            return { ...state, success: true, data: action.data, loading: false };\r\n        case GET_USER_COUNT_ERROR:\r\n            return { ...state, error: action.error };\r\n            //plopImport\r\n        default:\r\n            return state;\r\n    \r\n    }\r\n}\r\n\r\nexport default dashboard;","import {\r\n  DELETE_IMAGE_CAROUSEL_INIT,\r\n  DELETE_IMAGE_CAROUSEL_SUCCESS,\r\n  DELETE_IMAGE_CAROUSEL_ERROR,\r\n  GET_IMAGE_CAROUSEL_INIT,\r\n  GET_IMAGE_CAROUSEL_SUCCESS,\r\n  GET_IMAGE_CAROUSEL_ERROR,\r\n  SAVE_IMAGE_CAROUSEL_INIT,\r\n  SAVE_IMAGE_CAROUSEL_SUCCESS,\r\n  SAVE_IMAGE_CAROUSEL_ERROR,\r\n  GET_WITHDRAWAL_SETTINGS_INIT,\r\n  GET_WITHDRAWAL_SETTINGS_SUCCESS,\r\n  GET_WITHDRAWAL_SETTINGS_ERROR,\r\n  SET_WITHDRAWAL_PERCENTAGE_INIT,\r\n  SET_WITHDRAWAL_PERCENTAGE_SUCCESS,\r\n  SET_WITHDRAWAL_PERCENTAGE_ERROR,\r\n} from \"../constants/SettingsConstants.js\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null,\r\n  successGet: false,\r\n  delete: false,\r\n  success: false,\r\n  imageCarouselData: [],\r\n  getImageCarouselLoading: false,\r\n  getImageCarouselError: null,\r\n  getImageCarouselSuccess: false,\r\n  saveImageCarouselLoading: false,\r\n  saveImageCarouselError: null,\r\n  saveImageCarouselSuccess: false,\r\n  deleteImageCarouselSuccess: false,\r\n  deleteImageCarouselError: null,\r\n};\r\n\r\nconst settings = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_WITHDRAWAL_PERCENTAGE_INIT:\r\n      return { ...state, loading: true };\r\n    case SET_WITHDRAWAL_PERCENTAGE_SUCCESS:\r\n      return { ...state, success: true, data: action.data, loading: false };\r\n    case SET_WITHDRAWAL_PERCENTAGE_ERROR:\r\n      return { ...state, error: action.error, loading: false };\r\n    case GET_WITHDRAWAL_SETTINGS_INIT:\r\n      return { ...state, loading: true };\r\n    case GET_WITHDRAWAL_SETTINGS_SUCCESS:\r\n      return { ...state, successGet: true, data: action.data, loading: false };\r\n    case GET_WITHDRAWAL_SETTINGS_ERROR:\r\n      return { ...state, error: action.error, loading: false };\r\n    case SAVE_IMAGE_CAROUSEL_INIT:\r\n      return { ...state, saveImageCarouselLoading: true };\r\n    case SAVE_IMAGE_CAROUSEL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        saveImageCarouselSuccess: true,\r\n        saveImageData: action.data,\r\n        saveImageCarouselLoading: false,\r\n      };\r\n    case SAVE_IMAGE_CAROUSEL_ERROR:\r\n      return {\r\n        ...state,\r\n        saveImageCarouselError: action.error,\r\n        saveImageCarouselLoading: false,\r\n      };\r\n    case GET_IMAGE_CAROUSEL_INIT:\r\n      return {\r\n        ...state,\r\n        getImageCarouselLoading: true,\r\n        saveImageCarouselSuccess: false,\r\n      };\r\n    case GET_IMAGE_CAROUSEL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        imageCarouselData: action.data,\r\n        getImageCarouselSuccess: true,\r\n        getImageCarouselLoading: false,\r\n      };\r\n    case GET_IMAGE_CAROUSEL_ERROR:\r\n      return {\r\n        ...state,\r\n        getImageCarouselError: action.error,\r\n        getImageCarouselLoading: false,\r\n      };\r\n    case DELETE_IMAGE_CAROUSEL_INIT:\r\n      return { ...state, getImageCarouselLoading: true };\r\n    case DELETE_IMAGE_CAROUSEL_SUCCESS:\r\n      console.log(\"action image id : \" + JSON.stringify(action.data.imageId));\r\n      return {\r\n        ...state,\r\n        deleteImageCarouselSuccess: true,\r\n        imageCarouselData: state.imageCarouselData.filter(\r\n          (elem) => elem.id !== action.data.imageId\r\n        ),\r\n        getImageCarouselLoading: false,\r\n      };\r\n    case DELETE_IMAGE_CAROUSEL_ERROR:\r\n      return {\r\n        ...state,\r\n        deleteImageCarouselError: action.error,\r\n        getImageCarouselLoading: false,\r\n      };\r\n    //plopImport\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default settings;\r\n","import { combineReducers } from \"redux\";\r\nimport Auth from \"./Auth\";\r\nimport Theme from \"./Theme\";\r\nimport Users from \"./Users\";\r\nimport DoctorCategory from \"./DoctorCategory\";\r\nimport Doctor from \"./Doctor\";\r\nimport WithdrawRequest from \"./WithdrawRequestReducer\";\r\nimport Transaction from \"./TransactionReducer\";\r\nimport Dashboard from \"./DashboardReducer\";\r\nimport Settings from \"./SettingsReducer\";\r\n//plopImport\r\n\r\nconst reducers = combineReducers({\r\n  theme: Theme,\r\n  auth: Auth,\r\n  users: Users,\r\n  doctorCategory: DoctorCategory,\r\n  doctor: Doctor,\r\n  withdrawRequest:WithdrawRequest,\r\ntransaction:Transaction,\r\ndashboard:Dashboard,\r\nsettings:Settings,\r\n//plopReducer\r\n});\r\n\r\nexport default reducers;\r\n","import { all, takeEvery, put, fork, call } from \"redux-saga/effects\";\r\nimport {\r\n  AUTH_TOKEN,\r\n  SIGNIN,\r\n  SIGNOUT,\r\n  SIGNUP,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_FACEBOOK,\r\n} from \"../constants/Auth\";\r\n\r\nimport {\r\n  showAuthMessage,\r\n  authenticated,\r\n  signOutSuccess,\r\n  signUpSuccess,\r\n  signInWithGoogleAuthenticated,\r\n  signInWithFacebookAuthenticated,\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from \"services/FirebaseService\";\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({ payload }) {\r\n    const { email, password } = payload;\r\n    try {\r\n      const user = yield call(\r\n        FirebaseService.signInEmailRequest,\r\n        email,\r\n        password\r\n      );\r\n      if (user.message) {\r\n        yield put(showAuthMessage(user.message));\r\n      } else {\r\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n        yield put(authenticated(user.user.uid));\r\n      }\r\n    } catch (err) {\r\n      yield put(showAuthMessage(err));\r\n    }\r\n  });\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n    try {\r\n      const signOutUser = yield call(FirebaseService.signOutRequest);\r\n      if (signOutUser === undefined) {\r\n        localStorage.removeItem(AUTH_TOKEN);\r\n        yield put(signOutSuccess(signOutUser));\r\n      } else {\r\n        yield put(showAuthMessage(signOutUser.message));\r\n      }\r\n    } catch (err) {\r\n      yield put(showAuthMessage(err));\r\n    }\r\n  });\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({ payload }) {\r\n    const { email, password } = payload;\r\n    try {\r\n      const user = yield call(\r\n        FirebaseService.signUpEmailRequest,\r\n        email,\r\n        password\r\n      );\r\n      if (user.message) {\r\n        yield put(showAuthMessage(user.message));\r\n      } else {\r\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n        yield put(signUpSuccess(user.user.uid));\r\n      }\r\n    } catch (error) {\r\n      yield put(showAuthMessage(error));\r\n    }\r\n  });\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n    try {\r\n      const user = yield call(FirebaseService.signInGoogleRequest);\r\n      if (user.message) {\r\n        yield put(showAuthMessage(user.message));\r\n      } else {\r\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n        yield put(signInWithGoogleAuthenticated(user.user.uid));\r\n      }\r\n    } catch (error) {\r\n      yield put(showAuthMessage(error));\r\n    }\r\n  });\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n    try {\r\n      const user = yield call(FirebaseService.signInFacebookRequest);\r\n      if (user.message) {\r\n        yield put(showAuthMessage(user.message));\r\n      } else {\r\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n        yield put(signInWithFacebookAuthenticated(user.user.uid));\r\n      }\r\n    } catch (error) {\r\n      yield put(showAuthMessage(error));\r\n    }\r\n  });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(signInWithFBEmail),\r\n    fork(signOut),\r\n    fork(signUpWithFBEmail),\r\n    fork(signInWithFBGoogle),\r\n    fork(signInWithFacebook),\r\n  ]);\r\n}\r\n","import { all, takeEvery, put, fork, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  USERS_FETCH_DATA_INIT,\r\n  DELETE_USER_INIT,\r\n  //plopImportConstant\r\n} from \"../constants/Users\";\r\n\r\nimport {\r\n  fetchUsersSuccess,\r\n  fetchUsersFail,\r\n  deleteUserSuccess,\r\n  deleteUserError,\r\n  //plopImportAction\r\n} from \"../actions/Users\";\r\n\r\nimport FirebaseService from \"services/FirebaseService\";\r\n\r\nexport function* getUsers() {\r\n  yield takeEvery(USERS_FETCH_DATA_INIT, function* () {\r\n    try {\r\n      const users = yield call(FirebaseService.fetchCollection, \"Users\", {\r\n        sort: {\r\n          attribute: \"createdAt\",\r\n          order: \"desc\",\r\n        },\r\n      });\r\n      let changeTime = users.map((element) => {\r\n        var d = new Date(0);\r\n        d.setUTCMilliseconds(element.createdAt);\r\n        return {\r\n          ...element,\r\n          createdAt: `${d}`,\r\n        };\r\n      });\r\n\r\n      console.log(\r\n        \"🚀 ~ file: TransactionSaga.js ~ line 22 ~ changeTime ~ changeTime\",\r\n        users\r\n      );\r\n      yield put(fetchUsersSuccess(changeTime));\r\n    } catch (error) {\r\n      console.log(\"error : \" + error);\r\n      yield put(fetchUsersFail(error));\r\n    }\r\n  });\r\n}\r\nexport function* deleteUser() {\r\n  yield takeEvery(DELETE_USER_INIT, function* (action) {\r\n    try {\r\n      console.log(\r\n        \"🚀 ~ file: Doctors.js ~ line 108 ~ yieldtakeEvery ~ action\",\r\n        action\r\n      );\r\n\r\n      yield call(FirebaseService.deleteUser, action.userId);\r\n      yield put(deleteUserSuccess(action.userId));\r\n    } catch (error) {\r\n      console.log(\r\n        \"🚀 ~ file: Doctors.js ~ line 117 ~ yieldtakeEvery ~ error\",\r\n        error\r\n      );\r\n      yield put(deleteUserError(error.message));\r\n    }\r\n  });\r\n}\r\n//plopSaga\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getUsers),\r\n    fork(deleteUser),\r\n    //plopExport\r\n  ]);\r\n}\r\n","import { all, takeEvery, put, fork, call } from \"redux-saga/effects\";\r\nimport {\r\n  fetchDoctorCategoryFail,\r\n  fetchDoctorCategorySuccess,\r\n} from \"redux/actions/DoctorCategory\";\r\n\r\nimport { DOCTOR_CATEGORY_FETCH_INIT } from \"redux/constants/DoctorCategory\";\r\n\r\nimport FirebaseService from \"services/FirebaseService\";\r\n\r\nexport function* getDoctorCategory() {\r\n  yield takeEvery(DOCTOR_CATEGORY_FETCH_INIT, function* () {\r\n    try {\r\n      const doctorCategory = yield call(\r\n        FirebaseService.fetchCollection,\r\n        \"DoctorCategory\"\r\n      );\r\n      yield put(fetchDoctorCategorySuccess(doctorCategory));\r\n    } catch (error) {\r\n      yield put(fetchDoctorCategoryFail(error));\r\n    }\r\n  });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(getDoctorCategory)]);\r\n}\r\n","import { all, takeEvery, put, fork, call } from \"redux-saga/effects\";\r\nimport {\r\n  fetchDoctorFail,\r\n  fetchDoctorSuccess,\r\n  fetchTopRatedDoctorSuccess,\r\n  deleteTopRatedSuccess,\r\n  deleteTopRatedError,\r\n  addTopRatedDoctorSuccess,\r\n  addTopRatedDoctorError,\r\n  deleteDoctorSuccess,\r\n  setDoctorAccountStatusSuccess,\r\n  setDoctorAccountStatusError,\r\n  //plopImportAction\r\n} from \"../actions/Doctor\";\r\nimport {\r\n  DOCTOR_FETCH_INIT,\r\n  FETCH_TOP_RATED_DOCTOR_INIT,\r\n  DELETE_TOP_RATED_INIT,\r\n  ADD_TOP_RATED_DOCTOR_INIT,\r\n  DELETE_DOCTOR_INIT,\r\n  SET_DOCTOR_ACCOUNT_STATUS_INIT,\r\n  //plopImportConstant\r\n} from \"redux/constants/Doctor\";\r\n\r\nimport FirebaseService from \"services/FirebaseService\";\r\n\r\nexport function* getDoctors() {\r\n  yield takeEvery(DOCTOR_FETCH_INIT, function* () {\r\n    try {\r\n      const doctors = yield call(FirebaseService.fetchCollection, \"Doctors\", {\r\n        sort: {\r\n          attribute: \"createdAt\",\r\n          order: \"desc\",\r\n        },\r\n      });\r\n      let changeTime = doctors.map((element) => {\r\n        var d = new Date(0);\r\n        d.setUTCSeconds(element.createdAt.seconds);\r\n        return {\r\n          ...element,\r\n          createdAt: `${d}`,\r\n        };\r\n      });\r\n      yield put(fetchDoctorSuccess(changeTime));\r\n    } catch (error) {\r\n      console.log(\r\n        \"🚀 ~ file: Doctors.js ~ line 37 ~ yieldtakeEvery ~ error\",\r\n        error\r\n      );\r\n      yield put(fetchDoctorFail(error));\r\n    }\r\n  });\r\n}\r\n\r\nexport function* getTopRatedDoctor() {\r\n  yield takeEvery(FETCH_TOP_RATED_DOCTOR_INIT, function* () {\r\n    try {\r\n      const listIdTopRatedDoctor = yield call(\r\n        FirebaseService.fetchCollection,\r\n        \"TopRatedDoctor\"\r\n      );\r\n\r\n      let convertTopRatedId = listIdTopRatedDoctor.map((item) =>\r\n        item[\"doctorId\"].replace(/\\s/g, \"\")\r\n      );\r\n      console.log(\r\n        \"🚀 ~ file: Doctors.js ~ line 41 ~ yieldtakeEvery ~ convertTopRatedId\",\r\n        convertTopRatedId\r\n      );\r\n      if (convertTopRatedId.length > 10) {\r\n        convertTopRatedId.length = 10;\r\n      }\r\n\r\n      const listTopRated = yield call(\r\n        FirebaseService.fetchCollection,\r\n        \"Doctors\",\r\n        {\r\n          queries: [\r\n            {\r\n              attribute: \"uid\",\r\n              operator: \"in\",\r\n              value: convertTopRatedId,\r\n            },\r\n          ],\r\n        }\r\n      );\r\n      console.log(\r\n        \"🚀 ~ file: Doctors.js ~ line 50 ~ yieldtakeEvery ~ listTopRated\",\r\n        listTopRated\r\n      );\r\n      yield put(fetchTopRatedDoctorSuccess(listTopRated));\r\n    } catch (error) {}\r\n  });\r\n}\r\nexport function* deleteTopRated() {\r\n  yield takeEvery(DELETE_TOP_RATED_INIT, function* (action) {\r\n    try {\r\n      yield call(FirebaseService.removeTopRatedDoctor, action.doctorId);\r\n      yield put(deleteTopRatedSuccess(action.doctorId));\r\n    } catch (error) {\r\n      yield put(deleteTopRatedError(error.message));\r\n    }\r\n  });\r\n}\r\n\r\nexport function* addTopRatedDoctor() {\r\n  yield takeEvery(ADD_TOP_RATED_DOCTOR_INIT, function* (action) {\r\n    try {\r\n      yield call(FirebaseService.addTopRatedDoctor, action.doctorId);\r\n      yield put(addTopRatedDoctorSuccess(action.doctorId));\r\n    } catch (error) {\r\n      console.log(\r\n        \"🚀 ~ file: Doctors.js ~ line 91 ~ yieldtakeEvery ~ error\",\r\n        error\r\n      );\r\n\r\n      yield put(addTopRatedDoctorError(error.message));\r\n    }\r\n  });\r\n}\r\nexport function* deleteDoctor() {\r\n  yield takeEvery(DELETE_DOCTOR_INIT, function* (action) {\r\n    try {\r\n      console.log(\r\n        \"🚀 ~ file: Doctors.js ~ line 108 ~ yieldtakeEvery ~ action\",\r\n        action\r\n      );\r\n\r\n      yield call(FirebaseService.deleteDoctorAccount, action.doctorId);\r\n      yield put(deleteDoctorSuccess(action.doctorId));\r\n    } catch (error) {\r\n      console.log(\r\n        \"🚀 ~ file: Doctors.js ~ line 117 ~ yieldtakeEvery ~ error\",\r\n        error\r\n      );\r\n      yield put(addTopRatedDoctorError(error.message));\r\n    }\r\n  });\r\n}\r\nexport function* setDoctorAccountStatus() {\r\n  yield takeEvery(SET_DOCTOR_ACCOUNT_STATUS_INIT, function* (action) {\r\n    try {\r\n      yield call(\r\n        FirebaseService.setDoctorAccountStatus,\r\n        action.doctorId,\r\n        action.status\r\n      );\r\n      yield put(setDoctorAccountStatusSuccess(action.doctorId, action.status));\r\n    } catch (error) {\r\n      yield put(setDoctorAccountStatusError(error));\r\n    }\r\n  });\r\n}\r\n//plopSaga\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getDoctors),\r\n    fork(getTopRatedDoctor),\r\n    fork(deleteTopRated),\r\n    fork(addTopRatedDoctor),\r\n    fork(deleteDoctor),\r\n    fork(setDoctorAccountStatus),\r\n    //plopExport\r\n  ]);\r\n}\r\n","import { all, takeEvery, put, fork, call } from \"redux-saga/effects\";\r\nimport {\r\n  getWithdrawRequestError,\r\n  getWithdrawRequestSuccess,\r\n  setWihthdrawalRequestCompleteSuccess,\r\n  setWihthdrawalRequestCompleteError,\r\n  //plopImportAction\r\n} from \"../actions/WithdrawRequestActions.js\";\r\nimport {\r\n  GET_WITHDRAW_REQUEST_INIT,\r\n  SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT,\r\n  //plopImportConstant\r\n} from \"redux/constants/WithdrawRequestConstants.js\";\r\n\r\nimport FirebaseService from \"services/FirebaseService\";\r\n\r\nexport function* GetWithdrawRequest() {\r\n  yield takeEvery(GET_WITHDRAW_REQUEST_INIT, function* () {\r\n    try {\r\n      const data = yield call(\r\n        FirebaseService.fetchCollection,\r\n        \"WithdrawRequest\"\r\n      );\r\n      console.log(\r\n        \"🚀 ~ file: WithdrawRequestSaga.js ~ line 21 ~ yieldtakeEvery ~ data\",\r\n        data\r\n      );\r\n\r\n      yield put(getWithdrawRequestSuccess(data));\r\n    } catch (error) {\r\n      console.log(\r\n        \"🚀 ~ file: WithdrawRequestSaga.js ~ line 29 ~ yieldtakeEvery ~ error\",\r\n        error.message\r\n      );\r\n\r\n      yield put(getWithdrawRequestError(error));\r\n    }\r\n  });\r\n}\r\nexport function* setWihthdrawalRequestComplete() {\r\n  yield takeEvery(SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT, function* (action) {\r\n    try {\r\n      yield call(FirebaseService.markWithdrawalRequestComplete, action.data);\r\n      yield put(setWihthdrawalRequestCompleteSuccess(action.data));\r\n    } catch (error) {\r\n      yield put(setWihthdrawalRequestCompleteError(error));\r\n    }\r\n  });\r\n}\r\n//plopSaga\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(GetWithdrawRequest),\r\n    fork(setWihthdrawalRequestComplete),\r\n    //plopExport\r\n  ]);\r\n}\r\n","import { all, takeEvery, put, fork, call } from \"redux-saga/effects\";\r\nimport {\r\n  getTransactionError,\r\n  getTransactionSuccess,\r\n  //plopImportAction\r\n} from \"../actions/TransactionActions.js\";\r\nimport {\r\n  GET_TRANSACTION_INIT,\r\n  //plopImportConstant\r\n} from \"redux/constants/TransactionConstants.js\";\r\n\r\nimport FirebaseService from \"services/FirebaseService\";\r\n\r\nexport function* GetTransaction() {\r\n  yield takeEvery(GET_TRANSACTION_INIT, function* () {\r\n    try {\r\n      const data = yield call(FirebaseService.fetchCollection, \"Order\", {\r\n        sort: {\r\n          attribute: \"createdAt\",\r\n          order: \"desc\",\r\n        },\r\n      });\r\n      let changeTime = data.map((element) => {\r\n        var d = new Date(0);\r\n        d.setUTCSeconds(element.createdAt.seconds);\r\n        return {\r\n          ...element,\r\n          createdAt: `${d}`,\r\n        };\r\n      });\r\n\r\n      console.log(\r\n        \"🚀 ~ file: TransactionSaga.js ~ line 22 ~ changeTime ~ changeTime\",\r\n        changeTime\r\n      );\r\n\r\n      yield put(getTransactionSuccess(changeTime));\r\n    } catch (error) {\r\n      console.log(\r\n        \"🚀 ~ file: TransactionSaga.js ~ line 41 ~ yieldtakeEvery ~ error\",\r\n        error.message\r\n      );\r\n      yield put(getTransactionError(error));\r\n    }\r\n  });\r\n}\r\n//plopSaga\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(GetTransaction),\r\n    //plopExport\r\n  ]);\r\n}\r\n","import { all, takeEvery, put, fork, call } from \"redux-saga/effects\";\r\nimport {\r\n  getUserCountError,\r\n  getUserCountSuccess,\r\n  //plopImportAction\r\n} from \"../actions/DashboardActions.js\";\r\nimport {\r\n  GET_USER_COUNT_INIT,\r\n  //plopImportConstant\r\n} from \"redux/constants/DashboardConstants.js\";\r\n\r\nimport FirebaseService from \"services/FirebaseService\";\r\n\r\nexport function* GetUserCount() {\r\n  yield takeEvery(GET_USER_COUNT_INIT, function* () {\r\n    try {\r\n      const data = yield call(FirebaseService.countCollection, \"Users\");\r\n      yield put(getUserCountSuccess(data));\r\n    } catch (error) {\r\n      yield put(getUserCountError(error));\r\n    }\r\n  });\r\n}\r\n//plopSaga\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(GetUserCount),\r\n    //plopExport\r\n  ]);\r\n}\r\n","import { all, takeEvery, put, fork, call } from \"redux-saga/effects\";\r\nimport {\r\n  setWithdrawalPercentageError,\r\n  setWithdrawalPercentageSuccess,\r\n  getWithdrawalSettingsSuccess,\r\n  getWithdrawalSettingsError,\r\n  saveImageCarouselSuccess,\r\n  saveImageCarouselError,\r\n  getImageCarouselSuccess,\r\n  deleteImageCarouselSuccess,\r\n  deleteImageCarouselError,\r\n  //plopImportAction\r\n} from \"../actions/SettingsActions.js\";\r\nimport {\r\n  SET_WITHDRAWAL_PERCENTAGE_INIT,\r\n  GET_WITHDRAWAL_SETTINGS_INIT,\r\n  SAVE_IMAGE_CAROUSEL_INIT,\r\n  GET_IMAGE_CAROUSEL_INIT,\r\n  DELETE_IMAGE_CAROUSEL_INIT,\r\n  //plopImportConstant\r\n} from \"redux/constants/SettingsConstants.js\";\r\n\r\nimport FirebaseService from \"services/FirebaseService\";\r\n\r\nexport function* SetWithdrawalPercentage() {\r\n  yield takeEvery(SET_WITHDRAWAL_PERCENTAGE_INIT, function* (action) {\r\n    try {\r\n      yield call(FirebaseService.setPercentage, action);\r\n      yield put(setWithdrawalPercentageSuccess(action.data));\r\n    } catch (error) {\r\n      yield put(setWithdrawalPercentageError(error));\r\n    }\r\n  });\r\n}\r\nexport function* getWithdrawalSettings() {\r\n  yield takeEvery(GET_WITHDRAWAL_SETTINGS_INIT, function* () {\r\n    try {\r\n      const data = yield call(FirebaseService.getWithdrawalSettings);\r\n      yield put(getWithdrawalSettingsSuccess(data));\r\n    } catch (error) {\r\n      yield put(getWithdrawalSettingsError(error));\r\n    }\r\n  });\r\n}\r\nexport function* saveImageCarousel() {\r\n  yield takeEvery(SAVE_IMAGE_CAROUSEL_INIT, function* (action) {\r\n    try {\r\n      const urlImage = yield call(\r\n        FirebaseService.uploadImage,\r\n        action.data.fileName,\r\n        action.data.file\r\n      );\r\n      console.log(\"upload data \" + urlImage);\r\n      let data = { imageUrl: urlImage, fileName: action.data.fileName };\r\n      yield call(FirebaseService.saveImageCarouselData, data);\r\n      yield put(saveImageCarouselSuccess());\r\n    } catch (error) {\r\n      yield put(saveImageCarouselError(error));\r\n    }\r\n  });\r\n}\r\nexport function* getImageCarousel() {\r\n  yield takeEvery(GET_IMAGE_CAROUSEL_INIT, function* () {\r\n    try {\r\n      const data = yield call(FirebaseService.getImageCarousel);\r\n      console.log(\r\n        \"🚀 ~ file: SettingsSaga.js ~ line 64 ~ yieldtakeEvery ~ data\",\r\n        data\r\n      );\r\n\r\n      let changeTime = data.map((element) => {\r\n        var d = new Date(0);\r\n        d.setUTCSeconds(element.createdAt.seconds);\r\n        return {\r\n          ...element,\r\n          createdAt: `${d}`,\r\n        };\r\n      });\r\n\r\n      yield put(getImageCarouselSuccess(changeTime));\r\n    } catch (error) {\r\n      yield put();\r\n    }\r\n  });\r\n}\r\nexport function* deleteImageCarousel() {\r\n  yield takeEvery(DELETE_IMAGE_CAROUSEL_INIT, function* (action) {\r\n    console.log(\r\n      \"🚀 ~ file: SettingsSaga.js ~ line 89 ~ yieldtakeEvery ~ action\",\r\n      action.data\r\n    );\r\n    try {\r\n      yield call(FirebaseService.removeImageCarousel, action);\r\n      yield put(deleteImageCarouselSuccess(action.data));\r\n    } catch (error) {\r\n      yield put(deleteImageCarouselError(error));\r\n    }\r\n  });\r\n}\r\n//plopSaga\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(SetWithdrawalPercentage),\r\n    fork(getWithdrawalSettings),\r\n    fork(saveImageCarousel),\r\n    fork(getImageCarousel),\r\n    fork(deleteImageCarousel),\r\n    //plopExport\r\n  ]);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport Auth from \"./Auth\";\r\nimport Users from \"./Users\";\r\nimport DoctorCategory from \"./DoctorCategory\";\r\nimport Doctors from \"./Doctors\";\r\nimport WithdrawRequest from \"./WithdrawRequestSaga\";\r\nimport Transaction from \"./TransactionSaga\";\r\nimport Dashboard from \"./DashboardSaga\";\r\nimport Settings from \"./SettingsSaga\";\r\n//plopImport\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n    Users(),\r\n    DoctorCategory(),\r\n    Doctors(),\r\n    WithdrawRequest(),\r\nTransaction(),\r\nDashboard(),\r\nSettings(),\r\n//plopSaga\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  DashboardOutlined,\r\n  UserOutlined,\r\n  DollarCircleOutlined,\r\n  SwapOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: \"home\",\r\n    path: `${APP_PREFIX_PATH}/home`,\r\n    title: \"home\",\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n];\r\nconst usersNavTree = [\r\n  {\r\n    key: \"users\",\r\n    path: `${APP_PREFIX_PATH}/users`,\r\n    title: \"Users\",\r\n    icon: UserOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n];\r\nconst DoctorsNavTree = [\r\n  {\r\n    key: \"doctors\",\r\n    path: `${APP_PREFIX_PATH}/doctors`,\r\n    title: \"Doctors\",\r\n    icon: UserOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n];\r\nconst DoctorCategoryNavTree = [\r\n  {\r\n    key: \"doctor-category\",\r\n    path: `${APP_PREFIX_PATH}/doctor-category`,\r\n    title: \"Doctor Category\",\r\n    icon: UserOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n];\r\n\r\nconst WithdrawNavTree = [\r\n  {\r\n    key: \"withdraw\",\r\n    path: `${APP_PREFIX_PATH}/withdra-request`,\r\n    title: \"Withdraw Request\",\r\n    icon: DollarCircleOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n];\r\nconst TransactionNavTree = [\r\n  {\r\n    key: \"transaction\",\r\n    path: `${APP_PREFIX_PATH}/transaction`,\r\n    title: \"Transaction\",\r\n    icon: SwapOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n];\r\nconst SettingsNavTree = [\r\n  {\r\n    key: \"settings\",\r\n    path: `${APP_PREFIX_PATH}/settings`,\r\n    title: \"Settings\",\r\n    icon: SettingOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n];\r\n//NavigationConst\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n  ...usersNavTree,\r\n  ...DoctorsNavTree,\r\n  ...DoctorCategoryNavTree,\r\n\r\n  ...WithdrawNavTree,\r\n  ...TransactionNavTree,\r\n  ...SettingsNavTree,\r\n  //NavigationConfig\r\n];\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  popupClassName=\"top-nav-menu\"\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import { Menu, Dropdown, Avatar } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  SettingOutlined,\r\n  QuestionCircleOutlined,\r\n  LogoutOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Icon from \"components/util-components/Icon\";\r\nimport { signOut } from \"redux/actions/Auth\";\r\n\r\nconst menuItem = [\r\n  {\r\n    title: \"Account Setting\",\r\n    icon: SettingOutlined,\r\n    path: \"https://halodoctor.netlify.app/\",\r\n  },\r\n  {\r\n    title: \"Help Center\",\r\n    icon: QuestionCircleOutlined,\r\n    path: \"/\",\r\n  },\r\n];\r\n\r\nexport const NavProfile = ({ signOut }) => {\r\n  const profileImg = \"/img/avatars/thumb-16.jpg\";\r\n  const profileMenu = (\r\n    <div className=\"nav-profile nav-dropdown\">\r\n      <div className=\"nav-profile-header\">\r\n        <div className=\"d-flex\">\r\n          <Avatar size={45} src={profileImg} />\r\n          <div className=\"pl-3\">\r\n            <h4 className=\"mb-0\">Admin</h4>\r\n            <span className=\"text-muted\">admin</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-profile-body\">\r\n        <Menu>\r\n          {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <a href={el.path}>\r\n                  <Icon type={el.icon} />\r\n                  <span className=\"font-weight-normal\">{el.title}</span>\r\n                </a>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n          <Menu.Item key={menuItem.length + 1} onClick={(e) => signOut()}>\r\n            <span>\r\n              <LogoutOutlined />\r\n              <span className=\"font-weight-normal\">Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item key=\"profile\">\r\n          <Avatar src={profileImg} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default connect(null, { signOut })(NavProfile);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\r\nimport Logo from \"./Logo\";\r\nimport NavSearch from \"./NavSearch\";\r\nimport { toggleCollapsedNav, onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport NavProfile from \"./NavProfile\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = (props) => {\r\n  const {\r\n    navCollapsed,\r\n    mobileNav,\r\n    navType,\r\n    headerNavColor,\r\n    toggleCollapsedNav,\r\n    onMobileNavToggle,\r\n    isMobile,\r\n    currentTheme,\r\n\r\n  } = props;\r\n  const [searchActive, setSearchActive] = useState(false);\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false);\r\n  };\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed);\r\n    } else {\r\n      onMobileNavToggle(!mobileNav);\r\n    }\r\n  };\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(\r\n        currentTheme === \"dark\" ? \"#00000\" : \"#ffffff\"\r\n      );\r\n    }\r\n    return utils.getColorContrast(headerNavColor);\r\n  };\r\n  const navMode = mode();\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return \"0px\";\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Header\r\n      className={`app-header ${navMode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className={`app-header-wrapper ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">\r\n              {isNavTop && !isMobile ? null : (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  onClick={() => {\r\n                    onToggle();\r\n                  }}\r\n                >\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                  ) : (\r\n                    <MenuFoldOutlined className=\"nav-icon\" />\r\n                  )}\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavProfile />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose} />\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  } = theme;\r\n  return {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleCollapsedNav,\r\n  onMobileNavToggle,\r\n})(HeaderNav);\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/home`}\r\n          component={lazy(() => import(`./home`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/users`}\r\n          component={lazy(() => import(`./users`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/doctor-category`}\r\n          component={lazy(() => import(`./doctor-category`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/doctor-category`}\r\n          component={lazy(() => import(`./doctor-category`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/user`}\r\n          component={lazy(() => import(`./user`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/new-doctor-category/:id/:name`}\r\n          component={lazy(() => import(`./new-doctor-category`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/new-doctor-category`}\r\n          component={lazy(() => import(`./new-doctor-category`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/doctors`}\r\n          component={lazy(() => import(`./doctors`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/withdra-request`}\r\n          component={lazy(() => import(`./withdraw-request`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/transaction`}\r\n          component={lazy(() => import(`./transaction`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/settings`}\r\n          component={lazy(() => import(`./settings`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/new-image-carousel`}\r\n          component={lazy(() => import(`./new-image-carousel`))}\r\n        />\r\n        {/*APPROUTE*/}\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if(direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }  \r\n    if(direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport { AUTH_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\" />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/login`}\r\n          component={lazy(() => import(`./authentication/login`))}\r\n        />\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/login-1`}\r\n          component={lazy(() => import(`./authentication/login-1`))}\r\n        />\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/register-1`}\r\n          component={lazy(() => import(`./authentication/register-1`))}\r\n        />\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/forgot-password`}\r\n          component={lazy(() => import(`./authentication/forgot-password`))}\r\n        />\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/error-1`}\r\n          component={lazy(() => import(`./errors/error-page-1`))}\r\n        />\r\n        <Redirect\r\n          from={`${AUTH_PREFIX_PATH}`}\r\n          to={`${AUTH_PREFIX_PATH}/login`}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default AppViews;\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass';\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: AUTH_PREFIX_PATH,\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, token, location, direction } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <RouteInterceptor path={APP_PREFIX_PATH} isAuthenticated={token}>\r\n            <AppLayout direction={direction} location={location}/>\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } =  theme;\r\n  const { token } = auth;\r\n  return { locale, direction, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","const FirebaseConfig = {\r\n  apiKey: \"\",\r\n  authDomain: \"\",\r\n  databaseURL:\r\n    \"\",\r\n  projectId: \"\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"\",\r\n  appId: \"\",\r\n  measurementId: \"\",\r\n};\r\n\r\nexport default FirebaseConfig;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport firebaseConfig from \"configs/FirebaseConfig\";\r\nimport \"firebase/functions\";\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst storageRef = firebase.storage();\r\nconst currentUser = auth.currentUser;\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\nconst functions = firebase.functions();\r\nexport {\r\n  firebase,\r\n  functions,\r\n  db,\r\n  auth,\r\n  storageRef,\r\n  currentUser,\r\n  googleAuthProvider,\r\n  facebookAuthProvider,\r\n  twitterAuthProvider,\r\n  githubAuthProvider,\r\n};\r\n","import {\r\n  firebase,\r\n  auth,\r\n  db,\r\n  storageRef,\r\n  googleAuthProvider,\r\n  facebookAuthProvider,\r\n} from \"auth/FirebaseAuth\";\r\nconst FirebaseService = {};\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => user)\r\n    .catch((err) => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => user)\r\n    .catch((err) => err);\r\n\r\nFirebaseService.signOutRequest = async () =>\r\n  await auth\r\n    .signOut()\r\n    .then((user) => user)\r\n    .catch((err) => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth\r\n    .signInWithPopup(googleAuthProvider)\r\n    .then((user) => user)\r\n    .catch((err) => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth\r\n    .signInWithPopup(facebookAuthProvider)\r\n    .then((user) => user)\r\n    .catch((err) => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n  await auth\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((user) => user)\r\n    .catch((err) => err);\r\n\r\nconst getFirestoreRef = (path) => firebase.firestore().collection(path);\r\n\r\nFirebaseService.fetchDocument = async (collection, id) => {\r\n  const document = await getFirestoreRef(collection).doc(id).get();\r\n  if (!document.exists) return null;\r\n  return { id: document.id, ...document.data() };\r\n};\r\n\r\nFirebaseService.fetchCollection = async (collection, options = {}) => {\r\n  const data = [];\r\n  let baseQuery = getFirestoreRef(collection);\r\n\r\n  if (options.queries) {\r\n    const { queries } = options;\r\n\r\n    queries.forEach(({ attribute, operator, value }) => {\r\n      if (attribute === \"uid\")\r\n        attribute = firebase.firestore.FieldPath.documentId();\r\n      baseQuery = baseQuery.where(attribute, operator, value);\r\n    });\r\n  }\r\n\r\n  if (options.sort) {\r\n    const { attribute, order } = options.sort;\r\n    baseQuery = baseQuery.orderBy(attribute, order);\r\n  }\r\n\r\n  (await baseQuery.get()).forEach((doc) => {\r\n    data.push({ id: doc.id, ...doc.data() });\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nFirebaseService.uploadImage = async (fileName, file) => {\r\n  console.log(\"filename : \" + fileName);\r\n  let url = await storageRef.ref(\"uploads\").child(fileName).put(file);\r\n  return url.ref.getDownloadURL();\r\n};\r\n\r\nFirebaseService.addDoctorCategory = async (categoryName, categoryTranslation, iconUrl) => {\r\n  try {\r\n    await db.collection(\"DoctorCategory\").add({\r\n      categoryName,\r\n      categoryTranslation,\r\n      iconUrl,\r\n    });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nFirebaseService.removeDoctorCategory = async (categoryId) => {\r\n  try {\r\n    await db.collection(\"DoctorCategory\").doc(categoryId).delete();\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nFirebaseService.editDoctorCategory = async (id, categoryName,categoryTranslation, iconUrl) => {\r\n  try {\r\n    if (iconUrl == null) {\r\n      await db.collection(\"DoctorCategory\").doc(id).update({\r\n        categoryName,\r\n        categoryTranslation,\r\n      });\r\n    } else {\r\n      await db.collection(\"DoctorCategory\").doc(id).set({\r\n        categoryName,\r\n        categoryTranslation,\r\n        iconUrl,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nFirebaseService.removeTopRatedDoctor = async (topRatedId) => {\r\n  try {\r\n    let snapshot = await db\r\n      .collection(\"TopRatedDoctor\")\r\n      .where(\"doctorId\", \"==\", topRatedId)\r\n      .get();\r\n    await snapshot.docs.at(0).ref.delete();\r\n  } catch (error) {\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 124 ~ FirebaseService.removeTopRatedDoctor= ~ error\",\r\n      error\r\n    );\r\n\r\n    throw error;\r\n  }\r\n};\r\n\r\nFirebaseService.addTopRatedDoctor = async (doctorId) => {\r\n  try {\r\n    await db.collection(\"TopRatedDoctor\").add({ doctorId });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nFirebaseService.deleteDoctorAccount = async (doctorId) => {\r\n  try {\r\n    var addMessage = firebase.functions().httpsCallable(\"deleteDoctor\");\r\n    await addMessage({ doctorId: doctorId });\r\n    console.log(\"delete doctor\");\r\n  } catch (error) {\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 160 ~ FirebaseService.deleteDoctorAccount ~ error\",\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\nFirebaseService.deleteUser = async (userId) => {\r\n  try {\r\n    var addMessage = firebase.functions().httpsCallable(\"deleteUser\");\r\n    await addMessage({ userId: userId });\r\n    console.log(\"delete user\");\r\n  } catch (error) {\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 160 ~ FirebaseService.deleteDoctorAccount ~ error\",\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nFirebaseService.countCollection = async (documentName) => {\r\n  let size = await db\r\n    .collection(documentName)\r\n    .get()\r\n    .then((snap) => {\r\n      return snap.size; // will return the collection size\r\n    });\r\n  return size;\r\n};\r\n\r\nFirebaseService.setPercentage = async (data) => {\r\n  await db\r\n    .collection(\"Settings\")\r\n    .doc(\"withdrawSetting\")\r\n    .set({ percentage: data.data.percentage, tax: data.data.tax });\r\n};\r\n\r\nFirebaseService.getWithdrawalSettings = async () => {\r\n  try {\r\n    let snapshot = await db.collection(\"Settings\").doc(\"withdrawSetting\").get();\r\n    if (!snapshot.exists) return {};\r\n    return snapshot.data();\r\n  } catch (error) {\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 206 ~ FirebaseService.getWithdrawalSettings= ~ error\",\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\nFirebaseService.getImageCarousel = async () => {\r\n  try {\r\n    let data = [];\r\n    let snapshot = await db\r\n      .collection(\"Settings\")\r\n      .doc(\"imageCarousel\")\r\n      .collection(\"listImage\")\r\n      .get();\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 213 ~ FirebaseService.getImageCarousel= ~ snapshot\",\r\n      snapshot.docs\r\n    );\r\n    snapshot.docs.forEach((doc) => {\r\n      data.push({ id: doc.id, ...doc.data() });\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 212 ~ FirebaseService.getImageCarousel= ~ error\",\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\nFirebaseService.removeImageCarousel = async (data) => {\r\n  console.log(\r\n    \"🚀 ~ file: FirebaseService.js ~ line 232 ~ FirebaseService.removeImageCarousel= ~ data\",\r\n    data\r\n  );\r\n  try {\r\n    await db\r\n      .collection(\"Settings\")\r\n      .doc(\"imageCarousel\")\r\n      .collection(\"listImage\")\r\n      .doc(data.data.imageId)\r\n      .delete();\r\n\r\n    let picRef = storageRef.refFromURL(data.data.imageUrl);\r\n    picRef.delete();\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\nFirebaseService.saveImageCarouselData = async (data) => {\r\n  try {\r\n    await db\r\n      .collection(\"Settings\")\r\n      .doc(\"imageCarousel\")\r\n      .collection(\"listImage\")\r\n      .add({\r\n        imageUrl: data.imageUrl,\r\n        fileName: data.fileName,\r\n        createdAt: firebase.firestore.Timestamp.fromDate(new Date()),\r\n      });\r\n  } catch (error) {\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 231 ~ FirebaseService.saveImageCarouselData= ~ error\",\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nFirebaseService.markWithdrawalRequestComplete = async (record) => {\r\n  try {\r\n    await db\r\n      .collection(\"WithdrawRequest\")\r\n      .doc(record.id)\r\n      .update({ status: \"complete\" });\r\n\r\n    let transactionSnapshot = await db\r\n      .collection(\"Transaction\")\r\n      .where(\"withdrawRequestId\", \"==\", record.id)\r\n      .get();\r\n    if (transactionSnapshot.empty) return;\r\n    transactionSnapshot.docs[0].ref.update({ status: \"success\" });\r\n  } catch (error) {\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 224 ~ FirebaseService.markWithdrawalRequestComplete ~ error\",\r\n      error\r\n    );\r\n\r\n    throw error;\r\n  }\r\n};\r\nFirebaseService.setDoctorAccountStatus = async (record, status) => {\r\n  try {\r\n    await db\r\n      .collection(\"Doctors\")\r\n      .doc(record)\r\n      .update({ accountStatus: status });\r\n  } catch (error) {\r\n    console.log(\r\n      \"🚀 ~ file: FirebaseService.js ~ line 240 ~ FirebaseService.setDoctorAccountStatus= ~ error\",\r\n      error\r\n    );\r\n\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default FirebaseService;\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","export const USERS_FETCH_DATA_INIT = \"USERS_FETCH_DATA_INIT\";\r\nexport const USERS_FETCH_DATA_SUCCESS = \"USERS_FETCH_DATA_SUCCESS\";\r\nexport const USERS_FETCH_DATA_FAIL = \"USERS_FETCH_DATA_FAIL\";\r\n//plopImport\r\nexport const DELETE_USER_INIT = \"DELETE_USER_INIT\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const DELETE_USER_ERROR = \"DELETE_USER_ERROR\";\r\n","export const GET_WITHDRAW_REQUEST_INIT = \"GET_WITHDRAW_REQUEST_INIT\";\r\nexport const GET_WITHDRAW_REQUEST_SUCCESS = \"GET_WITHDRAW_REQUEST_SUCCESS\";\r\nexport const GET_WITHDRAW_REQUEST_ERROR = \"GET_WITHDRAW_REQUEST_ERROR\";\r\n//plopImport\r\nexport const SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT = \"SET_WIHTHDRAWAL_REQUEST_COMPLETE_INIT\";\r\nexport const SET_WIHTHDRAWAL_REQUEST_COMPLETE_SUCCESS = \"SET_WIHTHDRAWAL_REQUEST_COMPLETE_SUCCESS\";\r\nexport const SET_WIHTHDRAWAL_REQUEST_COMPLETE_ERROR = \"SET_WIHTHDRAWAL_REQUEST_COMPLETE_ERROR\";","import {\r\n  SET_DOCTOR_ACCOUNT_STATUS_INIT,\r\n  SET_DOCTOR_ACCOUNT_STATUS_SUCCESS,\r\n  SET_DOCTOR_ACCOUNT_STATUS_ERROR,\r\n  DELETE_DOCTOR_INIT,\r\n  DELETE_DOCTOR_SUCCESS,\r\n  DELETE_DOCTOR_ERROR,\r\n  ADD_TOP_RATED_DOCTOR_INIT,\r\n  ADD_TOP_RATED_DOCTOR_SUCCESS,\r\n  ADD_TOP_RATED_DOCTOR_ERROR,\r\n  DELETE_TOP_RATED_INIT,\r\n  DELETE_TOP_RATED_SUCCESS,\r\n  DELETE_TOP_RATED_ERROR,\r\n  DOCTOR_FETCH_FAIL,\r\n  DOCTOR_FETCH_INIT,\r\n  DOCTOR_FETCH_SUCCESS,\r\n  FETCH_TOP_RATED_DOCTOR_INIT,\r\n  FETCH_TOP_RATED_DOCTOR_FAIL,\r\n  FETCH_TOP_RATED_DOCTOR_SUCCESS,\r\n} from \"../constants/Doctor\";\r\n\r\nexport const fetchDoctorInit = () => ({\r\n  type: DOCTOR_FETCH_INIT,\r\n});\r\n\r\nexport const fetchDoctorSuccess = (data) => ({\r\n  type: DOCTOR_FETCH_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const fetchDoctorFail = (err) => ({\r\n  type: DOCTOR_FETCH_FAIL,\r\n  err,\r\n});\r\n\r\nexport const fetchTopRatedDoctorInit = () => ({\r\n  type: FETCH_TOP_RATED_DOCTOR_INIT,\r\n});\r\n\r\nexport const fetchTopRatedDoctorFail = (topRatedError) => ({\r\n  type: FETCH_TOP_RATED_DOCTOR_FAIL,\r\n  topRatedError,\r\n});\r\n\r\nexport const fetchTopRatedDoctorSuccess = (topRatedDoctor) => ({\r\n  type: FETCH_TOP_RATED_DOCTOR_SUCCESS,\r\n  topRatedDoctor,\r\n});\r\n\r\nexport const deleteTopRatedInit = (doctorId) => ({\r\n  type: DELETE_TOP_RATED_INIT,\r\n  doctorId,\r\n});\r\n\r\nexport const deleteTopRatedSuccess = (doctorId) => ({\r\n  type: DELETE_TOP_RATED_SUCCESS,\r\n  doctorId,\r\n});\r\n\r\nexport const deleteTopRatedError = (error) => ({\r\n  type: DELETE_TOP_RATED_ERROR,\r\n  error,\r\n});\r\n\r\nexport const addTopRatedDoctorInit = (doctorId) => ({\r\n  type: ADD_TOP_RATED_DOCTOR_INIT,\r\n  doctorId,\r\n});\r\n\r\nexport const addTopRatedDoctorSuccess = (doctorId) => ({\r\n  type: ADD_TOP_RATED_DOCTOR_SUCCESS,\r\n  doctorId,\r\n});\r\n\r\nexport const addTopRatedDoctorError = (error) => ({\r\n  type: ADD_TOP_RATED_DOCTOR_ERROR,\r\n  error,\r\n});\r\n\r\nexport const deleteDoctorInit = (doctorId) => ({\r\n  type: DELETE_DOCTOR_INIT,\r\n  doctorId: doctorId,\r\n});\r\n\r\nexport const deleteDoctorSuccess = (doctorId) => ({\r\n  type: DELETE_DOCTOR_SUCCESS,\r\n  doctorId,\r\n});\r\n\r\nexport const deleteDoctorError = (error) => ({\r\n  type: DELETE_DOCTOR_ERROR,\r\n  error,\r\n});\r\n\r\nexport const setDoctorAccountStatusInit = (doctorId, status) => ({\r\n  type: SET_DOCTOR_ACCOUNT_STATUS_INIT,\r\n  doctorId,\r\n  status,\r\n});\r\n\r\nexport const setDoctorAccountStatusSuccess = (doctorId, status) => ({\r\n  type: SET_DOCTOR_ACCOUNT_STATUS_SUCCESS,\r\n  doctorId,\r\n  status,\r\n});\r\n\r\nexport const setDoctorAccountStatusError = (error) => ({\r\n  type: SET_DOCTOR_ACCOUNT_STATUS_ERROR,\r\n  error,\r\n});\r\n","//snippet rxconst\r\nexport const DOCTOR_CATEGORY_FETCH_INIT = \"DOCTOR_CATEGORY_FETCH_INIT\";\r\nexport const DOCTOR_CATEGORY_FETCH_SUCCESS = \"DOCTOR_CATEGORY_FETCH_SUCCESS\";\r\nexport const DOCTOR_CATEGORY_FETCH_FAIL = \"DOCTOR_CATEGORY_FETCH_FAIL\";\r\n//plopImport\r\n","export const GET_TRANSACTION_INIT = \"GET_TRANSACTION_INIT\";\r\nexport const GET_TRANSACTION_SUCCESS = \"GET_TRANSACTION_SUCCESS\";\r\nexport const GET_TRANSACTION_ERROR = \"GET_TRANSACTION_ERROR\";\r\n//plopImport","export const GET_USER_COUNT_INIT = \"GET_USER_COUNT_INIT\";\r\nexport const GET_USER_COUNT_SUCCESS = \"GET_USER_COUNT_SUCCESS\";\r\nexport const GET_USER_COUNT_ERROR = \"GET_USER_COUNT_ERROR\";\r\n//plopImport","import {\r\n  DELETE_IMAGE_CAROUSEL_INIT,\r\n  DELETE_IMAGE_CAROUSEL_SUCCESS,\r\n  DELETE_IMAGE_CAROUSEL_ERROR,\r\n  GET_IMAGE_CAROUSEL_INIT,\r\n  GET_IMAGE_CAROUSEL_SUCCESS,\r\n  GET_IMAGE_CAROUSEL_ERROR,\r\n  SAVE_IMAGE_CAROUSEL_INIT,\r\n  SAVE_IMAGE_CAROUSEL_SUCCESS,\r\n  SAVE_IMAGE_CAROUSEL_ERROR,\r\n  GET_WITHDRAWAL_SETTINGS_INIT,\r\n  GET_WITHDRAWAL_SETTINGS_SUCCESS,\r\n  GET_WITHDRAWAL_SETTINGS_ERROR,\r\n  SET_WITHDRAWAL_PERCENTAGE_INIT,\r\n  SET_WITHDRAWAL_PERCENTAGE_SUCCESS,\r\n  SET_WITHDRAWAL_PERCENTAGE_ERROR,\r\n} from \"../constants/SettingsConstants.js\";\r\n\r\nexport const setWithdrawalPercentageInit = (data) => ({\r\n  type: SET_WITHDRAWAL_PERCENTAGE_INIT,\r\n  data,\r\n});\r\n\r\nexport const setWithdrawalPercentageSuccess = (data) => ({\r\n  type: SET_WITHDRAWAL_PERCENTAGE_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const setWithdrawalPercentageError = (error) => ({\r\n  type: SET_WITHDRAWAL_PERCENTAGE_ERROR,\r\n  error,\r\n});\r\nexport const getWithdrawalSettingsInit = () => ({\r\n  type: GET_WITHDRAWAL_SETTINGS_INIT,\r\n});\r\n\r\nexport const getWithdrawalSettingsSuccess = (data) => ({\r\n  type: GET_WITHDRAWAL_SETTINGS_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const getWithdrawalSettingsError = (error) => ({\r\n  type: GET_WITHDRAWAL_SETTINGS_ERROR,\r\n  error,\r\n});\r\n\r\nexport const saveImageCarouselInit = (data) => ({\r\n  type: SAVE_IMAGE_CAROUSEL_INIT,\r\n  data,\r\n});\r\n\r\nexport const saveImageCarouselSuccess = () => ({\r\n  type: SAVE_IMAGE_CAROUSEL_SUCCESS,\r\n});\r\n\r\nexport const saveImageCarouselError = (error) => ({\r\n  type: SAVE_IMAGE_CAROUSEL_ERROR,\r\n  error,\r\n});\r\nexport const getImageCarouselInit = () => ({\r\n  type: GET_IMAGE_CAROUSEL_INIT,\r\n});\r\n\r\nexport const getImageCarouselSuccess = (data) => ({\r\n  type: GET_IMAGE_CAROUSEL_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const getImageCarouselError = (error) => ({\r\n  type: GET_IMAGE_CAROUSEL_ERROR,\r\n  error,\r\n});\r\n\r\nexport const deleteImageCarouselInit = (data) => ({\r\n  type: DELETE_IMAGE_CAROUSEL_INIT,\r\n  data,\r\n});\r\n\r\nexport const deleteImageCarouselSuccess = (data) => ({\r\n  type: DELETE_IMAGE_CAROUSEL_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const deleteImageCarouselError = (error) => ({\r\n  type: DELETE_IMAGE_CAROUSEL_ERROR,\r\n  error,\r\n});\r\n"],"sourceRoot":""}